boxplot(final$weight_20adults ~final$treatment_1)
#workers
shapiro.test(final$weight_20adults)  # nicht signifikant und daher nehmen kann normalverteilung angenommen werden.
leveneTest(final$weight_20adults, final$treatment_1) # nicht signifikant --> Nullhypothese von gleicher Varianz kann angenommen werden.
fligner.test(final$weight_20adults, final$treatment_1) #Test for Homoskedacity, nicht signifikant --> Nullhypothese kann angenommen werden --> ANOVA
mod <- lm(final$weight_20adults ~ final$treatment_1)
summary(mod)
anova(mod) # signifikante differenz zwischen den drei gruppen
#pairwise post hoc tests
#bonferroni
pairwise.t.test(final$weight_20adults, final$treatment_1, p.adj = "bonf")
#Tukey HSD
a1 <- aov(mod)
TukeyHSD(a1)
#queens
shapiro.test(final$weight_queen)  # nicht signifikant und daher nehmen kann normalverteilung angenommen werden.
leveneTest(final$weight_queen, final$treatment_1) # nicht signifikant --> Nullhypothese von gleicher Varianz kann angenommen werden.
fligner.test(final$weight_queen, final$treatment_1) #Test for Homoskedacity, nicht signifikant --> Nullhypothese kann angenommen werden --> ANOVA
mod <- lm(final$weight_queen ~ final$treatment_1)
anova(mod) # keine signifikante differenz zwischen den drei gruppen
summary(mod)
#pairwise post hoc tests
#bonferroni
pairwise.t.test(final$weight_queen, final$treatment_1, p.adj = "bonf")
#Tukey HSD
a1 <- aov(mod)
TukeyHSD(a1)
control <- subset(final, treatment_1 == "control")
low     <- subset(final, treatment_1 == "low")
high    <- subset(final, treatment_1 == "high")
mean(final$weight_queen)
sd(final$weight_queen, na.rm = TRUE)
mean(control$weight_queen)
sd(control$weight_queen, na.rm = TRUE)
mean(low$weight_queen)
sd(low$weight_queen, na.rm = TRUE)
mean(high$weight_queen)
sd(high$weight_queen, na.rm = TRUE)
mean(control$weight_20adults)
sd(control$weight_20adults, na.rm = TRUE)
mean(low$weight_20adults)
sd(low$weight_20adults, na.rm = TRUE)
mean(high$weight_20adults)
sd(high$weight_20adults, na.rm = TRUE)
par(mfrow=c(1,2))
boxplot(final$weight_queen ~final$treatment_1, main = "queen weight", xlab = "treatments", ylab="weight [mg]", ylim=c(22, 47) )
text(c(1,2,3), 45.6, labels = c("a", "a", "a"), font = 2)
mtext('A', side=3, line=1.5, at=0, cex = 1.5, font = 2)
boxplot(final$weight_20adults ~final$treatment_1, main = "weight of 20 workers", xlab = "treatments", ylab="weight [mg]", ylim=c(15, 25) )
text(c(1,2,3), 24.5, labels = c("a", "ab", "b"), font = 2)
mtext('B', side=3, line=1.5, at=0, cex = 1.5, font = 2)
boxplot(final1$adults ~ final1$treatment_1)
boxplot(final$adults ~ final$treatment_1)
#Y1 adults
shapiro.test(final1$adults)
hist(final1$adults)
mod <- lm(adults ~ treatment_1, data=final1)
mod
summary(modc)
summary(mod)
Anova(mod)
par(mfrow=c(2,2))
plot(modc)
acf(resid(modc))
par(mfrow=c(2,2))
plot(mod)
acf(resid(mod))
final$treat21 <- factor(paste(final$treatment_2, final$treatment_1))
final$treat21
plot(resid(modc)~final$treatment_1)
plot(resid(mod)~final$treatment_1)
par(mfrow=c(2,2))
plot(mod)
acf(resid(mod))
anova(mod)
#Y2 adults
mod <- lm(adults ~ treatment_1, data=final)
par(mfrow=c(2,2))
plot(mod)
acf(resid(mod))
summary(mod)
anova(mod)
a1 <- aov(mod)
TukeyHSD(a1)
#Y1 adults
mod <- lm(adults ~ treatment_1, data=final1)
par(mfrow=c(2,2))
plot(mod)
acf(resid(mod))
summary(mod)
anova(mod) # keine signifikante differenz zwischen den drei gruppen --> auch kein post hoc test der differenz nötig.
control1 <- subset(final1, treatment_1 == "control")
low1     <- subset(final1, treatment_1 == "low")
high1    <- subset(final1, treatment_1 == "high")
#Mean and SD values
mean(control1$adults)
sd(control1$adults, na.rm = TRUE)
mean(low1$adults)
sd(low1$adults, na.rm = TRUE)
mean(high1$adults)
sd(high1$adults, na.rm = TRUE)
meadian(control1$adults)
median(control1$adults)
median(control1$adults)
meadian(control1$adults)
median(control1$adults)
median(low1$adults)
median(high1$adults)
#Y2 adults
mod <- lm(adults ~ treatment_1, data=final)
par(mfrow=c(2,2))
plot(mod)
acf(resid(mod))
summary(mod)
anova(mod)
#Mean and SD values
mean(control$adults)
sd(control$adults, na.rm = TRUE)
mean(low$adults)
sd(low$adults, na.rm = TRUE)
a1 <- aov(mod)
TukeyHSD(a1)
mean(high$adults)
sd(high$adults, na.rm = TRUE)
boxplot(final1$adults ~ final1$treatment_1, main = "number of workers year 1", xlab = "treatments", ylab = "nr. of workers" )
#nicer boxplot
par(mfrow=c(1,2))
boxplot(final1$adults ~ final1$treatment_1, main = "number of workers year 1", xlab = "treatments", ylab = "nr. of workers" )
boxplot(final1$adults ~ final1$treatment_1, main = "number of workers year 1", xlab = "treatments", ylab = "nr. of workers", ylim=c(0, 26))
text(c(1,2,3), 25, labels = c("a", "a", "a"), font = 2)
#nicer boxplot
par(mfrow=c(1,2))
boxplot(final1$adults ~ final1$treatment_1, main = "number of workers year 1", xlab = "treatments", ylab = "nr. of workers", ylim=c(0, 26))
text(c(1,2,3), 25, labels = c("a", "a", "a"), font = 2)
mtext('A', side=3, line=1.5, at=0, cex = 1.5, font = 2)
boxplot(final$adults ~ final$treatment_1, main = "number of workers year 2", xlab = "treatments", ylab = "nr. of workers")
boxplot(final$adults ~ final$treatment_1, main = "number of workers year 2", xlab = "treatments", ylab = "nr. of workers", ylim=c(, 420) )
boxplot(final$adults ~ final$treatment_1, main = "number of workers year 2", xlab = "treatments", ylab = "nr. of workers", ylim=c(140, 420) )
boxplot(final$adults ~ final$treatment_1, main = "number of workers year 2", xlab = "treatments", ylab = "nr. of workers", ylim=c(120, 420) )
boxplot(final1$adults ~ final1$treatment_1, main = "number of workers year 1", xlab = "treatments", ylab = "nr. of workers", ylim=c(0, 26))
text(c(1,2,3), 25, labels = c("a", "a", "a"), font = 2)
mtext('A', side=3, line=1.5, at=0, cex = 1.5, font = 2)
boxplot(final$adults ~ final$treatment_1, main = "number of workers year 2", xlab = "treatments", ylab = "nr. of workers", ylim=c(120, 420) )
text(c(1,2,3), 420, labels = c("a", "b", "b"), font = 2)
text(c(1,2,3), 400, labels = c("a", "b", "b"), font = 2)
text(c(1,2,3), 410, labels = c("a", "b", "b"), font = 2)
boxplot(final1$adults ~ final1$treatment_1, main = "number of workers year 1", xlab = "treatments", ylab = "nr. of workers", ylim=c(0, 26))
text(c(1,2,3), 25, labels = c("a", "a", "a"), font = 2)
mtext('A', side=3, line=1.5, at=0, cex = 1.5, font = 2)
boxplot(final$adults ~ final$treatment_1, main = "number of workers year 2", xlab = "treatments", ylab = "nr. of workers", ylim=c(120, 420) )
text(c(1,2,3), 410, labels = c("a", "b", "b"), font = 2)
mtext('B', side=3, line=1.5, at=0, cex = 1.5, font = 2)
modc <- lm(workforce ~ treatment_1, data=final)
modc
summary(modc)
Anova(modc)
final$treatment_1 <- relevel(final$treatment_1, ref ="low")
modc <- lm(adults ~ treatment_1, data=final)
summary(modc)
final$treatment_1 <- relevel(final$treatment_1, ref ="control")
#check the model assumptions
par(mfrow=c(2,2))
plot(modc)
mod <- lm(aduöts ~ treatment_1, data = final)
mod <- lm(adults ~ treatment_1, data = final)
mod
summary(mod)
anova(mod)
a1 <- aov(mod)
TukeyHSD(a1)
#relevel to see pairwais differences (not correct)
final$treatment_1 <- relevel(final$treatment_1, ref ="low")
modc <- lm(adults ~ treatment_1, data=final)
summary(modc)
final$treatment_1 <- relevel(final$treatment_1, ref ="control")
mod <- lm(adults ~ treatment_1, data = final)
mod
summary(mod)
anova(mod)
a1 <- aov(mod) #post hoc test to see pairwise differences
TukeyHSD(a1)
#check the model assumptions
par(mfrow=c(2,2))
plot(modc)
acf(resid(modc))
final$treat21 <- factor(paste(final$treatment_2, final$treatment_1))
final$treat21
plot(resid(modc)~final$treatment_1)
#check the model assumptions
par(mfrow=c(2,2))
plot(mod)
acf(resid(mod))
final$treat21 <- factor(paste(final$treatment_2, final$treatment_1))
final$treat21
plot(resid(mod)~final$treatment_1)
hist(final$adults)
shapiro.test((final$adults))
shapiro.test(final$adults)
#bayesian inference using sim
# add predicted values (group means)
newdatc<-expand.grid(
treatment_1=factor(c('control','low','high'), levels=levels(final$treatment_1)))
#bayesian inference using sim
# add predicted values (group means), we did not have predicted values
newdatc<-expand.grid(
treatment_1=factor(c('control','low','high'), levels=levels(final$treatment_1)))
newdatc$fit <- predict(mod, newdata=newdatc)
nsim <- 2000
bsimc <- sim(mod, n.sim=nsim)
bsimc <- sim(mod, n.sim=nsim)
#bayesian inference using sim
newdatc<-expand.grid(
treatment_1=factor(c('control','low','high'), levels=levels(final$treatment_1)))
newdatc$fit <- predict(mod, newdata=newdatc)
nsim <- 2000
bsimc <- sim(mod, n.sim=nsim)
str(bsimc)
bsimc <- sim(modc, n.sim=nsim)
bsimc <- sim(mod, n.sim=2000)
?sim
bsimc <- sim(mod, n.sims=nsim)
n.sim
nsim
bsimc <- sim(mod, n.sim=nsim)
bsimc <- sim(mod, nRep=nsim)
bsimc <- sim(2000,mod)
bsimc <- sim(2000, mod, n=nsim)
bsimc <- sim(mod, n=nsim)
bsimc <- sim(mod, n=nsim)
#bayesian inference using sim
newdatc<-expand.grid(
treatment_1=factor(c('control','low','high'), levels=levels(final$treatment_1)))
newdatc$fit <- predict(mod, newdata=newdatc)
nsim <- 2000
bsimc <- sim(mod, n=nsim)
bsimc <- sim(mod, n.sim=nsim)
#bayesian inference using sim
modc <- mod
newdatc<-expand.grid(
treatment_1=factor(c('control','low','high'), levels=levels(final1$treatment_1)))
newdatc$fit <- predict(modc, newdata=newdatc)
nsim <- 2000
bsimc <- sim(modc, n.sim=nsim)
str(bsimc)
fitmat <- matrix(ncol=nsim, nrow=nrow(newdatc))
Xmat <- model.matrix(formula(modc)[c(1,3)], data=newdatc)
for(i in 1:nsim) fitmat[,i] <- Xmat%*%bsimc@coef[i,]
bsimc <- sim(nRep=2000, modc)
bsimc <- sim(modc)
bsimc <- sim(modc, times=2000)
newdatc<-expand.grid(
treatment_1=factor(c('control','low','high'), levels=levels(final1$treatment_1)))
newdatc$fit <- predict(modc, newdata=newdatc)
nsim <- 2000
bsimc <- sim(modc, n.sim=nsim)
bsimc <- sim(modc, n.sim=nsim)
summary(final1$treatment_1)
summary(final1$treatment_2)
#exclude failure queens
final1 <- subset(final1, id!= "C9C" &  id!= "H4C" & id!="H11V")
final1$treatment_1 <- as.factor(final1$treatment_1)
final1$treatment_1 <- factor(final1$treatment_1, levels = c("control", "low", "high"))
final1$treatment_2 <- as.factor(final1$treatment_2)
final1$workforce <- final1$pupae+final1$adults
final1$workforce
mean(final1$workforce)
boxplot(workforce ~ treatment_1, data=final1)
boxplot(adults ~ treatment_1, data=final1)
boxplot(workforce ~ treatment_1, data=final1)
boxplot(adults ~ treatment_1, data=final1)
modc <- lm(workforce ~ treatment_1, data=final1)
modc
summary(modc)
Anova(modc)
final1$treatment_1 <- relevel(final1$treatment_1, ref ="low")
modc <- lm(adults ~ treatment_1, data=final1)
summary(modc)
final1$treatment_1 <- relevel(final1$treatment_1, ref ="control")
#check the model assumptions
par(mfrow=c(2,2))
plot(modc)
acf(resid(modc))
final1$treat21 <- factor(paste(final1$treatment_2, final1$treatment_1))
final1$treat21
plot(resid(modc)~final1$treatment_1)
newdatc<-expand.grid(
treatment_1=factor(c('control','low','high'), levels=levels(final1$treatment_1)))
newdatc$fit <- predict(modc, newdata=newdatc)
nsim <- 2000
bsimc <- sim(modc, n.sim=nsim)
str(bsimc)
fitmat <- matrix(ncol=nsim, nrow=nrow(newdatc))
Xmat <- model.matrix(formula(modc)[c(1,3)], data=newdatc)
for(i in 1:nsim) fitmat[,i] <- Xmat%*%bsimc@coef[i,]
getwd()
setwd("G:/BIENEN/Personnel/Daniel_Schlaeppi/DS-Bees_new/R/")
library(lme4)
dat <- read.table("speed.txt", header = TRUE)
head(dat)
str(dat)
dat$treat1 <- as.factor(dat$treat1)
dat$treat1 <- factor(dat$treat1, levels = c("control", "low", "high"))
dat$treat2 <- as.factor(dat$treat2)
#transform time into Minutes only
install.packages("chron")
install.packages("chron")
library(chron)
dat$time2 <- times(dat$time)
dat$time_min <- 60 * hours(dat$time2) + minutes(dat$time2)
dat$time_min
plot(dat$inispeed ~ dat$date) #day might have an effect and will be included as random foactor
plot(dat$inispeed ~ dat$time_min)
plot(dat$inispeed ~ dat$date) #day might have an effect and will be included as random foactor
head(dat)
mod_time <- lm(dat$inispeed ~ dat$time_min)
dat$inispeed <- dat$ini_speed
plot(dat$inispeed ~ dat$date) #day might have an effect and will be included as random foactor
plot(dat$inispeed ~ dat$time_min)
mod_time <- lm(dat$inispeed ~ dat$time_min)
abline(mod_time)              # time of day does not really seem to be relevant
#### For initial speed ####
hist(dat$inispeed, breaks = 7)
par(mfrow=c(1,1))
boxplot(dat$inispeed ~ dat$treat1 + dat$treat2) # plot data with boxplots to have a first idea of the data
mod <- lmer(inispeed ~ treat1 + treat2 + treat1:treat2 + time_min + (1|colony) + (1|date), data=dat, REML=FALSE)
mod
summary(mod)
str(mod)
#check model assumptions
par(mfrow=c(2,2))
scatter.smooth(fitted(mod),resid(mod)); abline(h=0, lty=2)  # residuals vs. fitted
title("Tukey-Anscombe Plot")
qqnorm(resid(mod), main="normal QQ-plot, residuals")
qqline(resid(mod))  # qq of residuals
scatter.smooth(fitted(mod), sqrt(abs(resid(mod))))  # homogeneity of variance
qqnorm(ranef(mod)$colony[,1]) # qq of random effects
qqline(ranef(mod)$colony[,1])
qqnorm(ranef(mod)$date[,1]) # The varince of date is so small that in the qq-plot it collapses to zero --> it is a bug and it can be assumed to be close to zero
qqline(ranef(mod)$date[,1])
boxplot(resid(mod)~dat$date)
#bayesian inference using sim
nsim <- 2000
bsim <- sim(mod, n.sim=nsim)
str(bsim)
apply(bsim@fixef, 2,quantile, prob=c(0.025,0.5,0.975))
#fitted values with 95% credible intervals
newdat<-expand.grid(
treat1=factor(c('control','low','high'), levels=levels(dat$treat1)),
treat2=factor(c('control','virus'),levels=levels(dat$treat2)))
newdat$time_min=mean(dat$time_min)
head(newdat)
Xmat <- model.matrix(~treat1 + treat2 + treat1:treat2 + time_min, data=newdat)      ####second part of model without of random factors
fitmat <- matrix(ncol=nsim, nrow=nrow(newdat))
for(i in 1:nsim) fitmat[,i] <- Xmat%*%bsim@fixef[i,]
newdat$lower <- apply(fitmat, 1, quantile, prob=0.025)
newdat$upper <- apply(fitmat, 1, quantile, prob=0.975)
newdat$fit <- Xmat%*%fixef(mod)
newdat
#create a super nice Graph:
library(extrafont)
fonts()
par(mfrow=c(1,1))
par(oma=c(1,0,0,0))
col <- c("darkolivegreen1", "darkorange3", "darkred")
boxplot(dat$inispeed ~ dat$treat1 + dat$treat2, border = "white",
main = "Initial speed", ylab = "initial movment speed [~cm/s]", xlab = "Treatment",
family = c("mono"), xaxt="n")
axis(1, at = c(1.2,2,2.8,4.2,5,5.8), labels=c("","no virus","","","virus",""))
stripchart(inispeed ~ treat1 + treat2, data = dat,
vertical = TRUE, at = c(1.2,2,2.8,4.2,5,5.8) ,method = "jitter",
pch = c(19,19,19,17,17,17), col = alpha(col, 0.8),
add = TRUE)
#plot posteriors
points(c(1.2,2,2.8,4.2,5,5.8), newdat$fit, pch = 19, cex=1.5)
segments(c(1.2,2,2.8,4.2,5,5.8), newdat$lower, c(1.2,2,2.8,4.2,5,5.8), newdat$upper, lwd = 3)
#add legends
legend(0.3, 13.4, c("control", "low", "high"), col = col, title = "neonicotinoid treatment", pch = c(19) , bty = "o", bg="transparent")
legend(0.7, 13.2, c("","",""), col = col, title = "", pch = c(17) , bty = "n", bg="transparent")
mtext("Real data of the initial speed plotted with the predicted mean and its 95% credible interval for each treatment", side = 1, outer = TRUE)
str(fitmat)
head(fitmat)
#bayesian inference using sim
nsim <- 2000
bsim <- sim(mod, n.sim=nsim)
bsim <- sim(nRep = 2000, model=mod)
load("dragons.RData")
library(lme4)
library(nlme)
library(arm)
library(car)
library(ggplot2) #not used in the end (I think)
library(emmeans)
setwd("G:/BIENEN/Personnel/Daniel_Schlaeppi/DS-Bees_new/R/iUSSI")
dat <- read.table("ANV_Neonic_in_workers_and_queens.txt", header = TRUE)
head(dat)
dat$treatment <- as.factor(dat$treatment)
dat$TREATMENT_LARS <- as.factor(dat$TREATMENT_LARS)
# relevel treatment 1 to control low high
levels(dat$treatment_1)
dat$treatment_1 <- factor(dat$treatment_1, levels(dat$treatment_1)[c(1,3,2)])
#all data used -> virus treatments stay included
#only samples that were tested and from the colonies that survived until the end of the experiment
dat <- subset(dat, final == "y")
table(dat$treatment_1)
dat <- subset(dat, sample != "blank")  #exclude blanks and drop the sample level so it does not appear anymore
dat$sample <- droplevels(dat)$sample
table(dat$sample)
#dry weight makes most sense!
boxplot(dat$conc_T_dry ~ dat$sample*dat$treatment_1)
boxplot(dat$conc_C_dry ~ dat$sample*dat$treatment_1)
workers <- subset(dat, sample == "worker")
queens <- subset(dat, sample == "queen")
#create subsets
WC <- subset(workers, treatment_1 == "control")
QC <- subset(queens, treatment_1 == "control")
WL <- subset(workers, treatment_1 == "low")
WH <- subset(workers, treatment_1 == "high")
QH <- subset(queens, treatment_1 == "high")
WHL<- subset(workers, treatment_1 == "high" | treatment_1 == "low")
QL <- subset(queens, treatment_1 == "low")
QHL<- subset(queens, treatment_1 == "high" | treatment_1 == "low")
WH$conc_C_dry
QH$conc_C_dry
QH$conc_C_dry[QH$conc_C_dry == 0] <- NA
WH$ratio <- WH$conc_T_dry/WH$conc_C_dry
QH$ratio <- QH$conc_T_dry/QH$conc_C_dry
boxplot()
boxplot(QH$ratio)
#neu für den ganzen Datensatz und dann alle Zeors mit NA replacen für statistik comparison with glmer
dat$c <- dat$conc_C_dry
dat$c[dat$c == 0] <- NA
dat$c
dat$t <- dat$conc_T_dry
dat$t[dat$t == 0] <- NA
dat$t
dat$ratio_TC <- dat$t/dat$c
dat$ratio_CT <- dat$c/dat$t #the nicer one
boxplot(dat$ratio_CT ~ dat$sample)
#for the model take only the complete cases
dat_model <- subset(dat, ratio_CT != "NA")
head(dat_model)
levels(dat_model$id)
dat_model$id <- droplevels(dat_model)$id
levels(dat_model$id)
dat_model_reduced <- subset(dat_model, id == "L19C" | id == "L20V" |id == "H1V" |id == "H2C" |id == "H3V" |id == "H5V" | id == "H7C" |id == "H9V" | id == "H10C" |id == "H13V" |id == "H14C" |id == "H15V" | id == "H16C" | id == "H20C")
boxplot(dat_model_reduced$ratio_CT ~ dat_model_reduced$sample)
model <- glmer(ratio_CT ~ sample + 1|id,  data = dat_model_reduced, family = "Gamma") #ev we should also include the treatment
summary(model)
anova(model)
plot(model)
scatter.smooth(fitted(model),resid(model)); abline(h=0, lty=2)  # residuals vs. fitted
title("Tukey-Anscombe Plot")
qqnorm(resid(model), main="normal QQ-plot, residuals")
qqline(resid(model))  # qq of residuals
scatter.smooth(fitted(model), sqrt(abs(resid(model))))  # homogeneity of variance
#model super complicated and with only a subset of values and so...
#simple comparison of two means t test if normally distributed
shapiro.test(dat$ratio_CT)
#signifikant und offensichtlich nicht normal verteilt --> wilcoxtest
wilcox.test(dat$ratio_CT ~ dat$sample)
#### ratio Graph for Journalclub talk ####
#Thiamethoxam
par(mar=c(5,5,3,1))
boxplot(dat$ratio_CT ~ dat$sample,
ylab = "clothianidin/thiamethoxam ratio",
xlab = "caste",
col = c("white","white"),
cex.lab = 1.5, cex.main = 3, cex.axis = 1.5, lwd = 1
)
text(c(1,2), 8, labels = c("a", "b"),  cex = 1.5, font = 2)
boxplot(dat$ratio_CT ~ dat$sample,
main = "clothianidin-thiamethoxam ratio",
ylab = "clothianidin [ng/g] / thiamethoxam [ng/g]",
xlab = "caste",
col = c("white","white"),
cex.lab = 1.5, cex.main = 3, cex.axis = 1.5, lwd = 1
)
#### ratio Graph for Journalclub talk ####
#Thiamethoxam
par(mar=c(5,5,5,1))
boxplot(dat$ratio_CT ~ dat$sample,
main = "clothianidin-thiamethoxam ratio",
ylab = "clothianidin [ng/g] / thiamethoxam [ng/g]",
xlab = "caste",
col = c("white","white"),
cex.lab = 1.5, cex.main = 3, cex.axis = 1.5, lwd = 1
)
boxplot(dat$ratio_CT ~ dat$sample,
main = "clothianidin-thiamethoxam ratio",
ylab = "clothianidin [ng/g] / thiamethoxam [ng/g]",
xlab = "caste",
col = c("white","white"),
cex.lab = 1.5, cex.main = 3, cex.axis = 1.5, lwd = 1
)
text(c(1,2), 8, labels = c("a", "b"),  cex = 1.5, font = 2)
mean(dat$ratio_CT ~dat$sample)
mean(dat$ratio_CT)
dat$ratio_CT
mean(dat$ratio_CT)
mean(dat$ratio_CTna.rm=TRUE)
mean(dat$ratio_CT, na.rm=TRUE)
mean(dat$ratio_CT[dat$sample == "queen"], na.rm=TRUE)
sd(dat$ratio_CT[dat$sample == "queen"], na.rm=TRUE)
mean(dat$ratio_CT[dat$sample == "workers"], na.rm=TRUE)
mean(dat$ratio_CT[dat$sample == "worker"], na.rm=TRUE)
sd(dat$ratio_CT[dat$sample == "worker"], na.rm=TRUE)
mean(dat$ratio_CT[dat$sample == "queen"], na.rm=TRUE)
sd(dat$ratio_CT[dat$sample == "queen"], na.rm=TRUE)
mean(dat$ratio_CT[dat$sample == "worker"], na.rm=TRUE)
sd(dat$ratio_CT[dat$sample == "worker"], na.rm=TRUE)
#signifikant und offensichtlich nicht normal verteilt --> wilcoxtest
wilcox.test(dat$ratio_CT ~ dat$sample)
