}
# Filter dataset to exclude doubled petri dishes
exclude_petridish_values <- c(2.4, 2.9, 3.4, 3.9)
data_run2_filtered <- subset(data_run2, !(petridish %in% exclude_petridish_values))
table(data_run2_filtered$treatment)
boxplot(data_run2_filtered$consumed_volume_0 ~ data_run2_filtered$treatment)
#
group_by(data_run2_filtered, treatment) %>%
summarise(
count = n(),
mean = mean(consumed_volume_0, na.rm = TRUE),
sd = sd(consumed_volume_0, na.rm = TRUE),
min = min(consumed_volume_0, na.rm = TRUE),
max = max(consumed_volume_0, na.rm = TRUE)
)
mod <- glmer.nb(consumed_volume_0 ~ treatment + (1|petridish), data = data_run2_filtered)
summary(mod)
Anova(mod)
cld(emmeans(mod, pairwise ~ "treatment", adjust = "tukey"), Letters = letters)
residuals <- residuals(mod)
plot(residuals)
qqnorm(residuals)
qqline(residuals, col = "red")
labels_df <- data.frame(treatment = c("high", "mid", "control", "low"),
label = c("a", "ab", "ab", "b"),
x = c(1, 2, 3, 4),
y = c(0.8, 0.8, 0.8, 0.8))
# Plot with labels (exported as )
ggplot(data_run2_filtered, aes(x = treatment, y = consumed_volume_0)) +
geom_boxplot(fill = alpha("grey", 0.5), color = "black", notch = TRUE, outlier.shape = NA) +
geom_jitter(width = 0.2, height = 0, alpha = 0.2, color = viridis(1)[1]) +
labs(x = "Treatments", y = "Honey water consumption [Î¼L]", title = "") +
theme(panel.background = element_rect(fill = "white", color = "black"),
panel.border = element_rect(color = "black", fill = NA),
axis.title = element_text(size = 15),
axis.text = element_text(size = 13)) +
geom_text(data = labels_df, aes(label = label, x = x, y = y, fontface = "bold"),
hjust = -0.2, vjust = 0.5, size = 5)
citation("survival")
citation("coxme")
citation("multcomp")
#### 3.  Neonic only survival analysis ####
exp1_data <- read.csv('flupy_survival_test.csv')
#exp1_data$concentration   #### see what happens if we run it as a numerical variable.
exp1_data$concentration <- factor(exp1_data$concentration )
#### 3.1 Stats neonic only ####
null_model <- coxme ( Surv (time = survival, event = censor) ~ 1                 + ( 1 | petri_dish) , data = exp1_data)
full_model <- coxme ( Surv (time = survival, event = censor) ~ 1 + concentration + ( 1 | petri_dish) , data = exp1_data)
anova(null_model   ,  full_model )
summary(full_model)
summary(glht( full_model, linfct = mcp (concentration="Tukey")), test=adjusted("BH"))
letters <- cld(summary(glht( full_model, linfct = mcp (concentration="Tukey")), test=adjusted("BH")))
#### 3.1 Plot neonic only ####
surv_plot <- survfit(Surv (time = survival, event = censor) ~ 1 + concentration , data=exp1_data) #basic plot
legend <- c('0     - a', '0.5  - ab','1     - ab','5     - a','10   - ab','50   - ab','100  - b','500  - c')
legend <- c('0', '0.5','1','5','10','50','100','500')
surv_plot <- ggsurvplot(surv_plot, data = exp1_data,
censor = FALSE,
legend.title = 'concentration [ppm]',
legend.labs = legend,
legend = c(0.15,0.25),
xlab = 'Time (days)',
ylab = 'Proportion Surviving',
break.time.by=2,
xlim = c(0,21),
ggtheme = theme_bw(),
palette = viridis(8, begin = 0, end = 0.8, option = 5),
conf.int= TRUE,
conf.int.alpha = 0.1
)
# remove the grid lines
surv_plot$plot <- surv_plot$plot + theme(panel.grid = element_blank()) +
theme(# Adjust font
axis.title = element_text(size = 16),          # Font size of axis titles
axis.text = element_text(size = 14),           # Font size of axis labels
legend.title = element_text(size = 16),        # Font size of legend title
legend.text = element_text(size = 14),         # Font size of legend labels
axis.ticks = element_line(linewidth = 1),           # Size of axis tick marks
strip.text = element_text(size = 14)           # Font size of facet labels (if applicable)
)
surv_plot # export eg. as 800*600
#read data and adjust data
{
antdata2 <- read.csv('flupy_fungus_individual_survival_data.csv')
antdata2$fungus <- as.factor(antdata2$fungus)
antdata2$petri_dish <- as.factor(antdata2$petri_dish)
antdata2$block <- as.factor(antdata2$block)
# concentration a proper number or factor
antdata2$concentration <- as.numeric(as.character(antdata2$concentration))
antdata2$concentration_factor <- as.factor(antdata2$concentration)
# creating a colony column, random factor must be controlled
antdata2 <- within(antdata2,colony <- substr(petri_dish,2,2))
antdata2$colony <- as.factor(antdata2$colony)
# create a new column "survival_14" and "censor_14 in antdata2 as we want to look at survival effects over 14 days
antdata2$survival_14 <- ifelse(antdata2$survival >= 14, 14, antdata2$survival)
antdata2$censor_14 <- ifelse(antdata2$survival <= 13, 1, 0)
}
antdata2$fungus <- factor(antdata2$fungus , levels=c("S","M"))
fungus_model_n      <- coxme ( Surv (time = survival_14, event = censor_14) ~ 1 + concentration + fungus + (1 | petri_dish) + (1 | colony) + (1 | block), data = antdata2)
interaction_model_n <- coxme ( Surv (time = survival_14, event = censor_14) ~ 1 + concentration * fungus + (1 | petri_dish) + (1 | colony) + (1 | block), data = antdata2)
anova(fungus_model_n, interaction_model_n)
summary(interaction_model_n)
anova(fungus_model_n, interaction_model_n)
contrast_matrix <- rbind("slope_fungusS"=c(1,0,0),"slope_fungusM"=c(1,0,1))
summary(glht(interaction_model_n,linfct=contrast_matrix),test=adjusted("BH"))
getwd()
exp1_data <- read.csv('flupy_survival_test.csv')
#exp1_data$concentration   #### see what happens if we run it as a numerical variable.
exp1_data$concentration <- factor(exp1_data$concentration)
#### 3.1 Stats neonic only ####
null_model <- coxme ( Surv (time = survival, event = censor) ~ 1                 + ( 1 | petri_dish) , data = exp1_data)
full_model <- coxme ( Surv (time = survival, event = censor) ~ 1 + concentration + ( 1 | petri_dish) , data = exp1_data)
anova(null_model   ,  full_model )
summary(full_model)
summary(glht( full_model, linfct = mcp (concentration="Tukey")), test=adjusted("BH"))
letters <- cld(summary(glht( full_model, linfct = mcp (concentration="Tukey")), test=adjusted("BH")))
letters
surv_plot <- survfit(Surv (time = survival, event = censor) ~ 1 + concentration , data=exp1_data) #basic plot
legend <- c('0     - a', '0.5  - ab','1     - ab','5     - a','10   - ab','50   - ab','100  - b','500  - c')
legend <- c('0', '0.5','1','5','10','50','100','500')
surv_plot <- ggsurvplot(surv_plot, data = exp1_data,
censor = FALSE,
legend.title = 'concentration [ppm]',
legend.labs = legend,
legend = c(0.15,0.25),
xlab = 'Time (days)',
ylab = 'Proportion Surviving',
break.time.by=2,
xlim = c(0,21),
ggtheme = theme_bw(),
palette = viridis(8, begin = 0, end = 0.8, option = 5),
conf.int= TRUE,
conf.int.alpha = 0.1
)
# remove the grid lines
surv_plot$plot <- surv_plot$plot + theme(panel.grid = element_blank()) +
theme(# Adjust font
axis.title = element_text(size = 16),          # Font size of axis titles
axis.text = element_text(size = 14),           # Font size of axis labels
legend.title = element_text(size = 16),        # Font size of legend title
legend.text = element_text(size = 14),         # Font size of legend labels
axis.ticks = element_line(linewidth = 1),           # Size of axis tick marks
strip.text = element_text(size = 14)           # Font size of facet labels (if applicable)
)
# remove the grid lines
surv_plot$plot <- surv_plot$plot + theme(panel.grid = element_blank()) +
theme(# Adjust font
axis.title = element_text(size = 30),          # Font size of axis titles
axis.text = element_text(size = 14),           # Font size of axis labels
legend.title = element_text(size = 16),        # Font size of legend title
legend.text = element_text(size = 14),         # Font size of legend labels
axis.ticks = element_line(linewidth = 1),           # Size of axis tick marks
strip.text = element_text(size = 14)           # Font size of facet labels (if applicable)
)
surv_plot <- ggsurvplot(surv_plot, data = exp1_data,
censor = FALSE,
legend.title = 'concentration [ppm]',
legend.labs = legend,
legend = c(0.15,0.25),
xlab = 'Time (days)',
ylab = 'Proportion Surviving',
break.time.by=2,
xlim = c(0,21),
ggtheme = theme_bw(),
palette = viridis(8, begin = 0, end = 0.8, option = 5),
conf.int= TRUE,
conf.int.alpha = 0.1
)
surv_plot <- survfit(Surv (time = survival, event = censor) ~ 1 + concentration , data=exp1_data) #basic plot
#legend <- c('0     - a', '0.5  - ab','1     - ab','5     - a','10   - ab','50   - ab','100  - b','500  - c')
legend <- c('0', '0.5','1','5','10','50','100','500')
surv_plot <- ggsurvplot(surv_plot, data = exp1_data,
censor = FALSE,
legend.title = 'concentration [ppm]',
legend.labs = legend,
legend = c(0.15,0.25),
xlab = 'Time (days)',
ylab = 'Proportion Surviving',
break.time.by=2,
xlim = c(0,21),
ggtheme = theme_bw(),
palette = viridis(8, begin = 0, end = 0.8, option = 5),
conf.int= TRUE,
conf.int.alpha = 0.1
)
# remove the grid lines
surv_plot$plot <- surv_plot$plot + theme(panel.grid = element_blank()) +
theme(# Adjust font
axis.title = element_text(size = 30),          # Font size of axis titles
axis.text = element_text(size = 14),           # Font size of axis labels
legend.title = element_text(size = 16),        # Font size of legend title
legend.text = element_text(size = 14),         # Font size of legend labels
axis.ticks = element_line(linewidth = 1),           # Size of axis tick marks
strip.text = element_text(size = 14)           # Font size of facet labels (if applicable)
)
surv_plot # export eg. as 800*600
#read data and adjust data
{
antdata2 <- read.csv('flupy_fungus_individual_survival_data.csv')
antdata2$fungus <- as.factor(antdata2$fungus)
antdata2$petri_dish <- as.factor(antdata2$petri_dish)
antdata2$block <- as.factor(antdata2$block)
# concentration a proper number or factor
antdata2$concentration <- as.numeric(as.character(antdata2$concentration))
antdata2$concentration_factor <- as.factor(antdata2$concentration)
# creating a colony column, random factor must be controlled
antdata2 <- within(antdata2,colony <- substr(petri_dish,2,2))
antdata2$colony <- as.factor(antdata2$colony)
# create a new column "survival_14" and "censor_14 in antdata2 as we want to look at survival effects over 14 days
antdata2$survival_14 <- ifelse(antdata2$survival >= 14, 14, antdata2$survival)
antdata2$censor_14 <- ifelse(antdata2$survival <= 13, 1, 0)
}
antdata2$fungus <- factor(antdata2$fungus , levels=c("S","M"))
#baseline model which is then updated to become the full interaction model
{
null_model          <- coxme ( Surv (time = survival_14, event = censor_14) ~ 1                                 + (1 | petri_dish) + (1 | colony) + (1 | block), data = antdata2)
flupy_model_f       <- coxme ( Surv (time = survival_14, event = censor_14) ~ 1 + concentration_factor          + (1 | petri_dish) + (1 | colony) + (1 | block), data = antdata2)
fungus_model_f      <- coxme ( Surv (time = survival_14, event = censor_14) ~ 1 + concentration_factor + fungus + (1 | petri_dish) + (1 | colony) + (1 | block), data = antdata2)
interaction_model_f <- coxme ( Surv (time = survival_14, event = censor_14) ~ 1 + concentration_factor * fungus + (1 | petri_dish) + (1 | colony) + (1 | block), data = antdata2)
anova(null_model, flupy_model_f, fungus_model_f, interaction_model_f)
}
anova(fungus_model_f, interaction_model_f)
Anova(interaction_model_f)
# pairwise comparison
em_means <- emmeans(interaction_model_f, ~ concentration_factor * fungus)
letters <- c("a", "b", "c", "d", "e", "f")
em_means
# Compute the CLD (Comparisons of Least Squares Means) using the letters
cld_results <- cld(em_means, Letters = letters)
letters <- cld_results$.group
letters
Anova(interaction_model_f)
# pairwise comparison
em_means <- emmeans(interaction_model_f, ~ concentration_factor * fungus)
# Compute the CLD (Comparisons of Least Squares Means) using the letters
cld_results <- cld(em_means, Letters = letters)
letters <- cld_results$.group
letters
#baseline model which is then updated to become the full interaction model
{
null_model          <- coxme ( Surv (time = survival_14, event = censor_14) ~ 1                                 + (1 | petri_dish) + (1 | colony) + (1 | block), data = antdata2)
flupy_model_f       <- coxme ( Surv (time = survival_14, event = censor_14) ~ 1 + concentration_factor          + (1 | petri_dish) + (1 | colony) + (1 | block), data = antdata2)
fungus_model_f      <- coxme ( Surv (time = survival_14, event = censor_14) ~ 1 + concentration_factor + fungus + (1 | petri_dish) + (1 | colony) + (1 | block), data = antdata2)
interaction_model_f <- coxme ( Surv (time = survival_14, event = censor_14) ~ 1 + concentration_factor * fungus + (1 | petri_dish) + (1 | colony) + (1 | block), data = antdata2)
anova(null_model, flupy_model_f, fungus_model_f, interaction_model_f)
}
anova(fungus_model_f, interaction_model_f)
Anova(interaction_model_f)
# pairwise comparison
em_means <- emmeans(interaction_model_f, ~ concentration_factor * fungus)
# Compute the CLD (Comparisons of Least Squares Means) using the letters
cld_results <- cld(em_means, Letters = letters)
letters <- cld_results$.group
letters
Anova(interaction_model_f)
# pairwise comparison
em_means <- emmeans(interaction_model_f, ~ concentration_factor * fungus)
em_means
# Compute the CLD (Comparisons of Least Squares Means) using the letters
cld_results <- cld(em_means, Letters = letters)
cld_results
cld_results$.group
letters <- cld_results$.group
# pairwise comparison
em_means <- emmeans(interaction_model_f, ~ concentration_factor * fungus)
letters <- c("a", "b", "c", "d", "e", "f")
# Compute the CLD (Comparisons of Least Squares Means) using the letters
cld_results <- cld(em_means, Letters = letters)
letters <- cld_results$.group
letters
# pairwise comparison
em_means <- emmeans(interaction_model_f, ~ concentration_factor * fungus)
letters <- c("a", "b", "c", "d", "e", "f")
# Compute the CLD (Comparisons of Least Squares Means) using the letters
cld_results <- cld(em_means, Letters = letters)
letters <- cld_results$.group
letters
surv_mod <- survfit(Surv (time = survival_14, event = censor_14) ~ 1 + concentration + fungus, data=antdata2)
# because it seems impossible to create the legend the plot is created two times once to make the graph look right and once just to get the legend
colors <- rep(viridis(3, begin = 0, end = 0.9, option = 5), length.out = 3)
color_palette <- c(colors[1],colors[1], colors[2], colors[2],colors[3], colors[3])
surv_plot <- ggsurvplot(surv_mod, data = antdata2,
linetype = "fungus",
xlab = 'Time (days)', ylab = 'Proportion Surviving',
palette = color_palette,
ggtheme = theme_bw(),
xlim = c(0, 15), break.time.by = 2,
censor = FALSE,
conf.int = TRUE,
conf.int.alpha = 0.1,
legend = "none")
surv_plot$plot <- surv_plot$plot + theme(panel.grid = element_blank())+
theme(# Adjust font
axis.title = element_text(size = 16),          # Font size of axis titles
axis.text = element_text(size = 14),           # Font size of axis labels
legend.title = element_text(size = 16),        # Font size of legend title
legend.text = element_text(size = 14),         # Font size of legend labels
axis.ticks = element_line(linewidth = 1),           # Size of axis tick marks
strip.text = element_text(size = 14)           # Font size of facet labels (if applicable)
)
surv_plot
antdata2$colony
surviplot <- survfit(Surv (time = survival_14, event = censor_14) ~ 1 + concentration + fungus, data=antdata2)
aggregate(  censor ~ fungus + concentration, FUN=mean,data=antdata2)
chosen_colors <- viridis(3, option = "inferno", begin = 0.2, end = 0.95)
color_vector <- rep(chosen_colors, each = 2)
# Create a plot to display the color squares
plot(1:3, rep(1, 3), type = "n", axes = FALSE, xlab = "", ylab = "", xlim = c(0.5, 3.5))
for (i in 1:3) {
rect(i - 0.4, 0.8, i + 0.4, 1.2, col = chosen_colors[i], border = "white")
}
legend("topright", legend = c("Color 1", "Color 2", "Color 3"), fill = chosen_colors)
par(mar = c(5, 4, 4, 2) + 0.1)
{
surv_plot <- ggsurvplot(surviplot, data = antdata2,
pval = FALSE, pval.coord = c(6, 1),
linetype = "fungus",
lwd = 2,
xlab = 'Time (days)', ylab = 'Proportion Surviving',
palette = rep(color_vector, 2),
ggtheme = theme_bw(),
xlim = c(0, 14), break.time.by = 2,
panel.labs = list(fungus = c("SHAM", "FUNGUS")),
short.panel.labs = TRUE,
panel.labs.font = list(face = "bold.italic", size = 11),
censor = FALSE,
conf.int = TRUE,
conf.int.alpha = 0.2
)
surv_plot$plot <- surv_plot$plot +
theme(panel.grid = element_blank(),
legend.position = "none") +
scale_y_continuous(limits = c(0.2, 1), breaks = seq(0.2, 1, by = 0.2)) +
theme(
axis.title = element_text(size = 30),          # Font size of axis titles
axis.text = element_text(size = 26),           # Font size of axis labels
axis.ticks = element_line(linewidth = 2),      # Size of axis tick marks
panel.border = element_rect(linewidth = 2),    # Border around the plot
legend.background = element_rect(fill = "transparent"),
legend.box.background = element_rect(fill = "transparent"),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA)
)
print(surv_plot)
# Convert ggsurvplot object to a grob
surv_grob <- ggplotGrob(surv_plot$plot)
# Save the grob with a transparent background
ggsave("/Users/gismo/Desktop/survival_plot.png", surv_grob, bg = "transparent", dpi = 320, width = 10, height = 8)
}
{
surv_plot <- ggsurvplot(surviplot, data = antdata2,
pval = FALSE, pval.coord = c(6, 1),
linetype = "fungus",
lwd = 2,
xlab = 'Time (days)', ylab = 'Proportion Surviving',
palette = rep(color_vector, 2),
ggtheme = theme_bw(),
xlim = c(0, 15), break.time.by = 2,
panel.labs = list(fungus = c("SHAM", "FUNGUS")),
short.panel.labs = TRUE,
panel.labs.font = list(face = "bold.italic", size = 11),
censor = FALSE,
conf.int = TRUE,
conf.int.alpha = 0.2
)
surv_plot$plot <- surv_plot$plot +
theme(panel.grid = element_blank(),
legend.position = "none") +
scale_y_continuous(limits = c(0.2, 1), breaks = seq(0.2, 1, by = 0.2)) +
theme(
axis.title = element_text(size = 30),          # Font size of axis titles
axis.text = element_text(size = 26),           # Font size of axis labels
axis.ticks = element_line(linewidth = 2),      # Size of axis tick marks
panel.border = element_rect(linewidth = 2),    # Border around the plot
legend.background = element_rect(fill = "transparent"),
legend.box.background = element_rect(fill = "transparent"),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA)
)
print(surv_plot)
# Convert ggsurvplot object to a grob
surv_grob <- ggplotGrob(surv_plot$plot)
# Save the grob with a transparent background
ggsave("/Users/gismo/Desktop/survival_plot.png", surv_grob, bg = "transparent", dpi = 320, width = 10, height = 8)
}
{
surv_plot <- ggsurvplot(surviplot, data = antdata2,
pval = FALSE, pval.coord = c(6, 1),
linetype = "fungus",
lwd = 2,
xlab = 'Time (days)', ylab = 'Proportion Surviving',
palette = rep(color_vector, 2),
ggtheme = theme_bw(),
xlim = c(0, 15), break.time.by = 2,
panel.labs = list(fungus = c("SHAM", "FUNGUS")),
short.panel.labs = TRUE,
panel.labs.font = list(face = "bold.italic", size = 11),
censor = FALSE,
conf.int = TRUE,
conf.int.alpha = 0.2
)
surv_plot$plot <- surv_plot$plot +
theme(panel.grid = element_blank(),
legend.position = "none") +
scale_y_continuous(limits = c(0.2, 1), breaks = seq(0.2, 1, by = 0.2)) +
theme(
axis.title = element_text(size = 30),          # Font size of axis titles
axis.text = element_text(size = 26),           # Font size of axis labels
axis.ticks = element_line(linewidth = 2),      # Size of axis tick marks
panel.border = element_rect(linewidth = 2),    # Border around the plot
legend.background = element_rect(fill = "transparent"),
legend.box.background = element_rect(fill = "transparent"),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA)
)
print(surv_plot)
# Convert ggsurvplot object to a grob
surv_grob <- ggplotGrob(surv_plot$plot)
# Save the grob with a transparent background
ggsave("/Users/gismo/Desktop/survival_plot.png", surv_grob, bg = "transparent", dpi = 320, width = 10, height = 10)
}
{
surv_plot <- ggsurvplot(surviplot, data = antdata2,
pval = FALSE, pval.coord = c(6, 1),
linetype = "fungus",
lwd = 2,
xlab = 'Time (days)', ylab = 'Proportion Surviving',
palette = rep(color_vector, 2),
ggtheme = theme_bw(),
xlim = c(0, 15), break.time.by = 2,
panel.labs = list(fungus = c("SHAM", "FUNGUS")),
short.panel.labs = TRUE,
panel.labs.font = list(face = "bold.italic", size = 11),
censor = FALSE,
conf.int = TRUE,
conf.int.alpha = 0.2
)
surv_plot$plot <- surv_plot$plot +
theme(panel.grid = element_blank(),
legend.position = "none") +
scale_y_continuous(limits = c(0.2, 1), breaks = seq(0.2, 1, by = 0.2)) +
theme(
axis.title = element_text(size = 30),          # Font size of axis titles
axis.text = element_text(size = 26),           # Font size of axis labels
axis.ticks = element_line(linewidth = 2),      # Size of axis tick marks
panel.border = element_rect(linewidth = 2),    # Border around the plot
legend.background = element_rect(fill = "transparent"),
legend.box.background = element_rect(fill = "transparent"),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA)
)
print(surv_plot)
# Convert ggsurvplot object to a grob
surv_grob <- ggplotGrob(surv_plot$plot)
# Save the grob with a transparent background
ggsave("/Users/gismo/Desktop/survival_plot.png", surv_grob, bg = "transparent", dpi = 320, width = 10, height = 9)
}
anova(fungus_model_f, interaction_model_f)
Anova(interaction_model_f)
fungus_model_n      <- coxme ( Surv (time = survival_14, event = censor_14) ~ 1 + concentration + fungus + (1 | petri_dish) + (1 | colony) + (1 | block), data = antdata2)
interaction_model_n <- coxme ( Surv (time = survival_14, event = censor_14) ~ 1 + concentration * fungus + (1 | petri_dish) + (1 | colony) + (1 | block), data = antdata2)
anova(fungus_model_n, interaction_model_n)
summary(interaction_model_n)
anova(fungus_model_n, interaction_model_n)
Anova(interaction_model_n, type="III")
anova(fungus_model_n, interaction_model_n)
{
surv_plot <- ggsurvplot(surviplot, data = antdata2,
pval = FALSE, pval.coord = c(6, 1),
linetype = "fungus",
lwd = 2,
xlab = 'Time (days)', ylab = 'Proportion Surviving',
palette = rep(color_vector, 2),
ggtheme = theme_bw(),
xlim = c(0, 15), break.time.by = 2,
panel.labs = list(fungus = c("SHAM", "FUNGUS")),
short.panel.labs = TRUE,
panel.labs.font = list(face = "bold.italic", size = 11),
censor = FALSE,
conf.int = TRUE,
conf.int.alpha = 0.2
)
surv_plot$plot <- surv_plot$plot +
theme(panel.grid = element_blank(),
legend.position = "none") +
scale_y_continuous(limits = c(0.2, 1), breaks = seq(0.3, 1.1, by = 0.2)) +
theme(
axis.title = element_text(size = 30),          # Font size of axis titles
axis.text = element_text(size = 26),           # Font size of axis labels
axis.ticks = element_line(linewidth = 2),      # Size of axis tick marks
panel.border = element_rect(linewidth = 2),    # Border around the plot
legend.background = element_rect(fill = "transparent"),
legend.box.background = element_rect(fill = "transparent"),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA)
)
print(surv_plot)
# Convert ggsurvplot object to a grob
surv_grob <- ggplotGrob(surv_plot$plot)
# Save the grob with a transparent background
#ggsave("/Users/gismo/Desktop/survival_plot.png", surv_grob, bg = "transparent", dpi = 320, width = 10, height = 9)
}
