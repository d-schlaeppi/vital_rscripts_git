ylab = "",
names.arg = c("workers", "queens", "workers", "queens"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
barplot(percent_positive_DWV_minus,
main = "DWV negative-sense strand",
xlab = "% of samples tested positive",
xlim = c(0,100),
ylab = "",
names.arg = c("workers", "queens", "workers", "queens"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("sample", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
percent_positive_DWV <- c(50, 18.75, 0, 0)
percent_positive_DWV_minus <- c(rep(0, 4))
percent_positive_ABPV <- c(85, 87.5, 0, 100)
percent_positive_ABPV_minus c(16.7, 50, 0, 100)
percent_positive_ABPV_minus <- c(16.7, 50, 0, 100)
barplot(percent_positive_ABPV,
main = "ABPV",
xlab = "% of samples tested positive for ABPV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers", "queens", "workers", "queens"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("sample", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_DWV,
main = "DWV",
xlab = "% of samples tested positive for DWV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers", "queens", "workers", "queens"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("sample", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_DWV_minus,
main = "DWV negative-sense strand",
xlab = "% of samples tested positive",
xlim = c(0,100),
ylab = "",
names.arg = c("workers", "queens", "workers", "queens"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("sample", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_ABPV,
main = "ABPV",
xlab = "% of samples tested positive for ABPV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers", "queens", "workers", "queens"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("sample", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 2.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
legend(73, 2.5, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
legend(73, 2.6, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_ABPV_minus,
main = "ABPV negative-sense strand",
xlab = "% of samples tested positive",
xlim = c(0,100),
ylab = "",
names.arg = c("workers", "queens", "workers", "queens"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("sample", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_DWV,
main = "DWV",
xlab = "% of samples tested positive for DWV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("sample", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
par(mar = c(5.1, 8.1, 4.1, 2.1))
barplot(percent_positive_DWV,
main = "DWV",
xlab = "% of samples tested positive for DWV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
par(mar = c(5.1, 7.1, 4.1, 2.1))
barplot(percent_positive_DWV,
main = "DWV",
xlab = "% of samples tested positive for DWV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
par(mfrow=c(2,2))
par(mar = c(5.1, 7.1, 4.1, 2.1))
barplot(percent_positive_DWV,
main = "DWV",
xlab = "% of samples tested positive for DWV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_DWV_minus,
main = "DWV negative-sense strand",
xlab = "% of samples tested positive",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_ABPV,
main = "ABPV",
xlab = "% of samples tested positive for ABPV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 2.6, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_ABPV_minus,
main = "ABPV negative-sense strand",
xlab = "% of samples tested positive",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_DWV,
main = "DWV",
xlab = "% of samples tested positive for DWV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_DWV_minus,
main = "DWV negative-sense strand",
xlab = "% of samples tested positive",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_ABPV,
main = "ABPV",
xlab = "% of samples tested positive for ABPV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 2.6, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_ABPV_minus,
main = "ABPV negative-sense strand",
xlab = "% of samples tested positive",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
par(mfrow=c(1,1))
barplot(percent_positive_DWV,
main = "DWV",
xlab = "% of samples tested positive for DWV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
par(mar = c(5.1, 7.3, 4.1, 2.1))
barplot(percent_positive_DWV,
main = "DWV",
xlab = "% of samples tested positive for DWV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_DWV,
main = "DWV",
xlab = "% of samples tested positive for DWV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_DWV,
main = "DWV",
xlab = "% of samples tested positive for DWV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_DWV_minus,
main = "DWV negative-sense strand",
xlab = "% of samples tested positive",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_ABPV,
main = "ABPV",
xlab = "% of samples tested positive for ABPV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=2)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
barplot(percent_positive_DWV,
main = "DWV",
xlab = "% of samples tested positive for DWV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=1)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_DWV,
main = "DWV",
xlab = "% of samples tested positive for DWV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=1)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_DWV_minus,
main = "DWV negative-sense strand",
xlab = "% of samples tested positive",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=1)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_ABPV,
main = "ABPV",
xlab = "% of samples tested positive for ABPV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=1)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 2.6, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
legend(5, 1, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
legend(1, 0, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
legend(1, 0.2, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
legend(1, 0.3, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_ABPV,
main = "ABPV",
xlab = "% of samples tested positive for ABPV",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=1)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(1, 0.3, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
barplot(percent_positive_ABPV_minus,
main = "ABPV negative-sense strand",
xlab = "% of samples tested positive",
xlim = c(0,100),
ylab = "",
names.arg = c("workers (N=18)", "queens (N=16)", "workers (N=2)", "queens (N=1)"),
col = col,
las = 1,
ylim = rev(range(0, 5)),
horiz = TRUE)
mtext("tested samples", side = 2, las = 1, font = 2, line = 1.1, at= -0.2)
legend(73, 0.25, legend = c("treatment", "controls"),
fill = c("black", "darkgrey"))
?rsequ
rm(list=ls())
rm(list=ls())
# load required libraries and functions:
library(dplyr) #contains pipe operator
library(ggplot2)
library(broom) #contains tidy()
library(viridis)
library(lme4)
library(car) # Anova()
library(multcomp) # contains cld
library(emmeans) # contains emmeans()
library(coxme)
library(survival)
library(survminer) # used in the analysis of the survival curves incl ggsurvplot
# working directory
directory <- "/Users/gismo/Documents/GitHub/vital_rscripts_git/flugus_manuscript/"
setwd(directory)
#### 2. FPF susceptibility test ####
# load data
exp1_data <- read.csv('flupy_susceptibility_test.csv') #flupy only survival data
exp1_data$concentration <- factor(exp1_data$concentration)
flugus_data <- read.csv('FPF_fungus_survival.csv') #flupy fungus co-exposure survival data
flugus_data$fungus <- factor(flugus_data$fungus, levels=c("S","M"))
#### 2.1 Stats ####
null_model <- coxme ( Surv (time = survival, event = censor) ~ 1                 + ( 1 | petri_dish), data = exp1_data)
full_model <- coxme ( Surv (time = survival, event = censor) ~ 1 + concentration + ( 1 | petri_dish), data = exp1_data)
anova(null_model   ,  full_model )
summary(full_model)
summary(glht( full_model, linfct = mcp (concentration="Tukey")), test=adjusted("BH"))
letters <- cld(summary(glht( full_model, linfct = mcp (concentration="Tukey")), test=adjusted("BH")))
#### 2.2 Survival plot ####
# Survial plot for the FPF susceptibility test (exported as 800*600)
surv_plot <- survfit(Surv (time = survival, event = censor) ~ 1 + concentration , data=exp1_data) #basic plot
legend <- c('0     - a', '0.5  - ab','1     - ab','5     - a','10   - ab','50   - ab','100  - b','500  - c')
surv_plot <- ggsurvplot(surv_plot, data = exp1_data,
censor = FALSE,
legend.title = 'concentration [ppm]',
legend.labs = legend,
legend = c(0.15,0.25),
xlab = 'Time (days)',
ylab = 'Proportion Surviving',
break.time.by=2,
xlim = c(0,21),
ggtheme = theme_bw(),
palette = viridis(8, begin = 0, end = 0.8, option = 5),
conf.int= TRUE,
conf.int.alpha = 0.1
)
surv_plot$plot <- surv_plot$plot + theme(panel.grid = element_blank()) +
theme(
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
axis.ticks = element_line(linewidth = 1),
strip.text = element_text(size = 14)
)
surv_plot
#### 3. FPF Fungus co-Exposure ####
#### 3.1 Stats ####
fungus_model      <- coxme ( Surv (time = survival, event = censor) ~ 1 + concentration + fungus + (1 | petri_dish) + (1 | colony) + (1 | block), data = flugus_data)
interaction_model <- coxme ( Surv (time = survival, event = censor) ~ 1 + concentration * fungus + (1 | petri_dish) + (1 | colony) + (1 | block), data = flugus_data)
anova(fungus_model, interaction_model)
summary(interaction_model)
contrast_matrix <- rbind("slope_fungusS"=c(1,0,0),"slope_fungusM"=c(1,0,1))
summary(glht(interaction_model,linfct=contrast_matrix),test=adjusted("BH"))
contrast_matrix <- rbind("slope_fungusS"=c(1,0,0),"slope_fungusM"=c(1,0,1))
summary(glht(interaction_model,linfct=contrast_matrix),test=adjusted("BH"))
anova(fungus_model, interaction_model)
#### 3.2 Plot ####
surviplot <- survfit(Surv (time = survival, event = censor) ~ 1 + concentration + fungus, data=flugus_data)
aggregate(censor ~ fungus + concentration, FUN=mean,data=flugus_data)
chosen_colors <- viridis(3, option = "inferno", begin = 0.35, end = 0.9)
show_col(chosen_colors, labels = TRUE, borders = NULL)
color_vector <- rep(chosen_colors, each = 2)
y_offset <- 0.05
{surv_plot <- ggsurvplot(surviplot, data = flugus_data,
pval = FALSE,
linetype = "fungus",
lwd = 1,
xlab = 'Time (days)', ylab = 'Proportion Surviving',
palette = color_vector,
ggtheme = theme_bw(),
xlim = c(0, 15), break.time.by = 2,
censor = FALSE,
conf.int = TRUE,
conf.int.alpha = 0.2,
legend = c(0.4, 0.25),
legend.title = "Treatments"
)
surv_plot$plot <- surv_plot$plot +
scale_y_continuous(limits = c(0.2, 1), breaks = seq(0.2, 1, by = 0.2)) +
theme(panel.grid = element_blank(), legend.position = "none") +
theme(
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
axis.ticks = element_line(linewidth = 1),
strip.text = element_text(size = 14)) +
geom_segment(aes(x = 14.3, y = 0.78, xend = 14.3, yend = 0.65))+
geom_segment(aes(x = 14.3, y = 0.52, xend = 14.3, yend = 0.325)) +
geom_segment(aes(x = 0, y = 0.4-y_offset, xend = 0.6, yend = 0.4-y_offset)) +
geom_segment(aes(x = 0, y = 0.3699-y_offset, xend = 0.6, yend = 0.3699-y_offset), linetype = "dashed") +
geom_segment(aes(x = 0, y = 0.33-y_offset, xend = 0.6, yend = 0.33-y_offset), color = chosen_colors[1]) +
geom_segment(aes(x = 0, y = 0.30-y_offset, xend = 0.6, yend = 0.30-y_offset), color = chosen_colors[2]) +
geom_segment(aes(x = 0, y = 0.271-y_offset, xend = 0.6, yend = 0.271-y_offset), color = chosen_colors[3]) +
annotate("text", x = 0.8, y=0.4-y_offset, label="sham", color = "black", size = 4, fontface = "plain", hjust = 0) +
annotate("text", x = 0.8, y=0.37-y_offset, label="fungus", color = "black", size = 4, fontface = "plain", hjust = 0) +
annotate("text", x = 0.8, y=0.33-y_offset, label="0 ppm", color = "black", size = 4, fontface = "plain", hjust = 0) +
annotate("text", x = 0.8, y=0.30-y_offset, label="5 ppm", color = "black", size = 4, fontface = "plain", hjust = 0) +
annotate("text", x = 0.8, y=0.27-y_offset, label="50 ppm", color = "black", size = 4, fontface = "plain", hjust = 0) +
annotate("text", x=14.7, y=0.71, label="n.s", color = "black", size = 4.5, fontface = "bold") +
annotate("text", x=14.7, y=0.42, label="p = \n 0.01", color = "black", size = 4.5, fontface = "bold")
print(surv_plot)
}
