palette = viridis(8, begin = 0, end = 0.9, option = 5),
conf.int = TRUE,
conf.int.alpha = 0.2,
linetype = line_types,
size = 0.8,
alpha = 0.8)
surv_plot$plot <- surv_plot$plot +
theme(panel.grid = element_blank()) +
theme(
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.ticks = element_line(linewidth = 0.8),
strip.text = element_text(size = 10),
legend.key.width = unit(2, "line"),
legend.position = "none") +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
scale_y_continuous(
breaks = seq(0.25, 1, by = 0.15),
limits = c(0.16, 1)) +
geom_text(data = y_coordinates,
aes(x = 22, y = prop_surviving, label = dash),
size = 3.5, hjust = 0, vjust = 0.5, inherit.aes = FALSE) +
geom_text(data = y_coordinates,
aes(x = 22.5 , y = prop_surviving, label = cld_labels),
size = 3.5, hjust = 0, vjust = 0.5, inherit.aes = FALSE, fontface = "bold") +
geom_text(data = y_coordinates[1:6, ],
aes(x = 21, y = prop_surviving, label = treatment_labels[1:6]),
size = 3.5, hjust = 0, vjust = 0.5, inherit.aes = FALSE) +
geom_text(data = y_coordinates[7:8, ],
aes(x = 21, y = prop_surviving, label = treatment_labels[7:8]),
size = 3.5, hjust = 0, vjust = 0.5, inherit.aes = FALSE,
fontface = "bold") +
# geom_text(data = y_coordinates[1:6, ],
#           aes(x = 21.5, y = prop_surviving, label = significance[1:6]),
#           size = 3.5, hjust = 0, vjust = 0.5, inherit.aes = FALSE) +
# geom_text(data = y_coordinates[7:8, ],
#           aes(x = 21.5, y = prop_surviving, label = significance[7:8]),
#           size = 3.5, hjust = 0, vjust = 0.5, inherit.aes = FALSE,
#           fontface = "bold") +
annotate("text", x = 20.75, y = 0.97, label = "c [ppm]", size = 3.5, hjust = 0, fontface = "bold")
surv_plot
}
y_coordinates <- exp1_data %>%
group_by(concentration) %>%
summarize(prop_surviving = sum(censor==0) / n()) %>% as.data.frame()
plot_data <- exp1_data %>% mutate(survival = ifelse(survival == 20 & censor == 0, 20.5, survival))
legend       <- c('    0', ' 0.5','    1','    5','  10','  50','100','500')
# significance <- c('    0   -  a', ' 0.5   -  ab','    1   -  ab','    5   -  a','  10   -  ab','  50   -  ab','100*  -  b','500*  -  c')
dash             <- rep("-", 8)
cld_labels   <- c('a','ab','ab','a','ab','ab','b','c')
treatment_labels <- c('0','0.5','1','5','10','50','100*','500*')
line_types       <- c("solid", "dashed", "dotted", "dotdash", "longdash", "twodash", "solid", "twodash")
{surv_plot <- survfit(Surv(time = survival, event = censor) ~ 1 + concentration, data = plot_data)
surv_plot <- ggsurvplot(surv_plot, data = exp1_data,
censor = FALSE,
legend.title = 'Concentration [ppm]',
legend.labs = legend,
legend = c(0.15, 0.25),
xlab = 'Time (days)',
ylab = 'Proportion Surviving',
# break.time.by = 2,
xlim = c(0, 22.7),
ylim = c(0, 1),
ggtheme = theme_bw(),
palette = viridis(8, begin = 0, end = 0.9, option = 5),
conf.int = TRUE,
conf.int.alpha = 0.2,
linetype = line_types,
size = 0.8,
alpha = 0.8)
surv_plot$plot <- surv_plot$plot +
theme(panel.grid = element_blank()) +
theme(
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.ticks = element_line(linewidth = 0.8),
strip.text = element_text(size = 10),
legend.key.width = unit(2, "line"),
legend.position = "none") +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
scale_y_continuous(
breaks = seq(0.25, 1, by = 0.15),
limits = c(0.16, 1)) +
geom_text(data = y_coordinates,
aes(x = 22, y = prop_surviving, label = dash),
size = 3.5, hjust = 0, vjust = 0.5, inherit.aes = FALSE) +
geom_text(data = y_coordinates,
aes(x = 22.5 , y = prop_surviving, label = cld_labels),
size = 3.5, hjust = 0, vjust = 0.5, inherit.aes = FALSE, fontface = "bold") +
geom_text(data = y_coordinates[1:6, ],
aes(x = 21, y = prop_surviving, label = treatment_labels[1:6]),
size = 3.5, hjust = 0, vjust = 0.5, inherit.aes = FALSE) +
geom_text(data = y_coordinates[7:8, ],
aes(x = 21, y = prop_surviving, label = treatment_labels[7:8]),
size = 3.5, hjust = 0, vjust = 0.5, inherit.aes = FALSE,
fontface = "bold") +
# geom_text(data = y_coordinates[1:6, ],
#           aes(x = 21.5, y = prop_surviving, label = significance[1:6]),
#           size = 3.5, hjust = 0, vjust = 0.5, inherit.aes = FALSE) +
# geom_text(data = y_coordinates[7:8, ],
#           aes(x = 21.5, y = prop_surviving, label = significance[7:8]),
#           size = 3.5, hjust = 0, vjust = 0.5, inherit.aes = FALSE,
#           fontface = "bold") +
annotate("text", x = 20.75, y = 0.97, label = "c [ppm]", size = 3.5, hjust = 0, fontface = "bold")
surv_plot
}
### Plot A - Survival plot for the FPF Fungus interaction test
surviplot <- survfit(Surv (time = survival, event = censor) ~ 1 + concentration + fungus, data=flugus_data)
# aggregate(censor ~ fungus + concentration, FUN=mean,data=flugus_data)
chosen_colors <- viridis(2, option = 2, begin = 0.2, end = 0.85)
# show_col(chosen_colors, labels = TRUE, borders = NULL)
color_vector <- rep(chosen_colors, 3)
y_offset <- 0.05
line_types <- rep(c("dotdash", "longdash", "solid"), each = 2)
y_coordinates <- flugus_data %>% group_by(concentration, fungus) %>%
summarize(prop_surviving = sum(censor==0) / n(),
mean_censor = mean(censor))  %>%
arrange(desc(prop_surviving)) %>% as.data.frame()
labeling <- c("  5 -","50 -","  0 -","  0 -","  5 -","50 -")
labeling_cld <- c("  a","  a","  a","  b"," bc","  c")
# Get endpoints of lines.
strata_names <- rep(names(surviplot$strata), surviplot$strata)
endpoints_df <- data.frame(
time = surviplot$time,
surv = surviplot$surv,
strata = strata_names)
shapes <- c("0" = 21, "5" = 22, "50" = 24)
y_legend_values <- c("0" = 0.33, "5" = 0.30, "50" = 0.271)
endpoints <- endpoints_df %>%
group_by(strata) %>%
slice_tail(n = 1) %>%
mutate(
concentration = str_extract(strata, "(?<=concentration=)\\d+"),
shape = as.numeric(shapes[concentration]),
y_legend = y_legend_values[concentration]  # Map concentration directly to y_legend
)
surv_plot <- ggsurvplot(surviplot, data = flugus_data,
pval = FALSE,
linetype = line_types,
lwd = 0.8,
xlab = 'Time (days)', ylab = 'Proportion Surviving',
palette = color_vector,
ggtheme = theme_bw(),
xlim = c(0, 15),
censor = FALSE,
conf.int = TRUE,
conf.int.alpha = 0.25,
legend = c(0.4, 0.25),
legend.title = "Treatments")
surv_plot$plot <- surv_plot$plot +
scale_y_continuous(limits = c(0.2, 1), breaks = seq(0.2, 1, by = 0.2)) +
theme(panel.grid = element_blank(), legend.position = "none") +
theme(plot.margin = margin(20, 10, 10, 10),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
axis.ticks = element_line(linewidth = 1),
strip.text = element_text(size = 14)) +
# geom_segment(aes(x = 14.8, y = 0.78, xend = 14.8, yend = 0.65))+
# geom_segment(aes(x = 14.8, y = 0.52, xend = 14.8, yend = 0.325)) +
geom_segment(aes(x = 0.4, y = 0.33-y_offset, xend = 1, yend = 0.33-y_offset), color = color_vector[1], linetype = line_types[1]) +
geom_segment(aes(x = 0.4, y = 0.30-y_offset, xend = 1, yend = 0.30-y_offset), color = color_vector[3], linetype = line_types[3]) +
geom_segment(aes(x = 0.4, y = 0.271-y_offset, xend = 1, yend = 0.271-y_offset), color = color_vector[5], linetype = line_types[5]) +
geom_segment(aes(x = 1.5, y = 0.33-y_offset, xend = 2.1, yend = 0.33-y_offset), color = color_vector[2], linetype = line_types[2]) +
geom_segment(aes(x = 1.5, y = 0.30-y_offset, xend = 2.1, yend = 0.30-y_offset), color = color_vector[4], linetype = line_types[4]) +
geom_segment(aes(x = 1.5, y = 0.271-y_offset, xend = 2.1, yend = 0.271-y_offset), color = color_vector[6], linetype = line_types[6]) +
annotate("text", x = 0.4, y = 0.36-y_offset, label = "sham"   , color = "black", size = 3, fontface = "bold", hjust = 0) +
annotate("text", x = 1.5, y = 0.36-y_offset, label = "fungus" , color = "black", size = 3, fontface = "bold", hjust = 0) +
annotate("text", x = 2.7, y = 0.36-y_offset, label = "c [ppm]", color = "black", size = 3, fontface = "bold", hjust = 0) +
annotate("text", x = 2.7, y = 0.33-y_offset, label = "0 ppm"  , color = "black", size = 3, fontface = "plain", hjust = 0) +
annotate("text", x = 2.7, y = 0.30-y_offset, label = "5 ppm"  , color = "black", size = 3, fontface = "plain", hjust = 0) +
annotate("text", x = 2.7, y = 0.27-y_offset, label = "50 ppm" , color = "black", size = 3, fontface = "plain", hjust = 0) +
# annotate("text", x=15.5, y=0.71, label="n.s       ", color = "black", size = 3, fontface = "bold") +
# annotate("text", x=15.5, y=0.42, label=" p = 0.01", color = "black", size = 3, fontface = "bold") +
geom_rect(aes(xmin = 0.2, xmax = 4, ymin = 0.2, ymax = 0.38 - y_offset),
fill = NA, color = "black", lwd = 0.05) +
scale_x_continuous(breaks = seq(0, 14, by = 2)) +
geom_segment(aes(x = 0.2, y = 0.2925, xend = 4, yend = 0.2925), color = "black", linewidth = 0.05) +
geom_segment(aes(x = 2.5, y = 0.2, xend = 2.5, yend = 0.33), color = "black", linewidth = 0.05) +
# shapes in legend
geom_point(data = endpoints[c(1,3,5),],
aes(x = 1.1, y = y_legend-y_offset, shape = shape),
size = 1.5, stroke = 0.8, color = color_vector[c(1,3,5)], fill = NA)+
geom_point(data = endpoints[c(1,3,5),],
aes(x = 2.2, y = y_legend-y_offset, shape = shape),
size = 1.5, stroke = 0.8, color = color_vector[c(2,4,6)], fill = color_vector[c(2,4,6)])+
# cld letters
geom_text(data = y_coordinates,
aes(x = 15, y = prop_surviving - 0.000, label = labeling_cld),
size = 4, hjust = 0, vjust = 0.5, inherit.aes = FALSE, fontface = "bold") +
# concentration labeling
geom_text(data = y_coordinates,
aes(x = 14.5, y = prop_surviving, label = labeling),
size = 4, hjust = 0, vjust = 0.5, inherit.aes = FALSE) +
annotate("text", x = 14.2, y = 0.85, label = "c [ppm]", size = 4, hjust = 0, fontface = "bold") +
# shapes at end of curves
geom_point(data = endpoints[c(2,4,6), ],  # First 3: unfilled
aes(x = time + 0.1, y = surv, shape = shape),
size = 2, stroke = 1, color = rev(color_vector)[c(2,4,6)], fill = NA) +
geom_point(data = endpoints[c(1,3,5), ],  # Last 3: filled
aes(x = time + 0.1, y = surv, shape = shape),
size = 2, stroke = 1, color = rev(color_vector)[c(1,3,5)], fill = color_vector[c(2,4,6)]) +
scale_shape_identity()
print(surv_plot)
surv_ggplot <- surv_plot$plot
### Plot A - Survival plot for the FPF Fungus interaction test
surviplot <- survfit(Surv (time = survival, event = censor) ~ 1 + concentration + fungus, data=flugus_data)
# aggregate(censor ~ fungus + concentration, FUN=mean,data=flugus_data)
chosen_colors <- viridis(2, option = 2, begin = 0.2, end = 0.85)
# show_col(chosen_colors, labels = TRUE, borders = NULL)
color_vector <- rep(chosen_colors, 3)
y_offset <- 0.05
line_types <- rep(c("dotdash", "longdash", "solid"), each = 2)
y_coordinates <- flugus_data %>% group_by(concentration, fungus) %>%
summarize(prop_surviving = sum(censor==0) / n(),
mean_censor = mean(censor))  %>%
arrange(desc(prop_surviving)) %>% as.data.frame()
labeling <- c("  5 -","50 -","  0 -","  0 -","  5 -","50 -")
labeling_cld <- c("  a","  a","  a","  b"," bc","  c")
# Get endpoints of lines.
strata_names <- rep(names(surviplot$strata), surviplot$strata)
endpoints_df <- data.frame(
time = surviplot$time,
surv = surviplot$surv,
strata = strata_names)
shapes <- c("0" = 21, "5" = 22, "50" = 24)
y_legend_values <- c("0" = 0.33, "5" = 0.30, "50" = 0.271)
endpoints <- endpoints_df %>%
group_by(strata) %>%
slice_tail(n = 1) %>%
mutate(
concentration = str_extract(strata, "(?<=concentration=)\\d+"),
shape = as.numeric(shapes[concentration]),
y_legend = y_legend_values[concentration]  # Map concentration directly to y_legend
)
surv_plot <- ggsurvplot(surviplot, data = flugus_data,
pval = FALSE,
linetype = line_types,
lwd = 0.8,
xlab = 'Time (days)', ylab = 'Proportion Surviving',
palette = color_vector,
ggtheme = theme_bw(),
xlim = c(0, 15),
censor = FALSE,
conf.int = TRUE,
conf.int.alpha = 0.25,
legend = c(0.4, 0.25),
legend.title = "Treatments")
surv_plot$plot <- surv_plot$plot +
scale_y_continuous(limits = c(0.2, 1), breaks = seq(0.2, 1, by = 0.2)) +
theme(panel.grid = element_blank(), legend.position = "none") +
theme(plot.margin = margin(20, 10, 10, 10),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
axis.ticks = element_line(linewidth = 1),
strip.text = element_text(size = 14)) +
# geom_segment(aes(x = 14.8, y = 0.78, xend = 14.8, yend = 0.65))+
# geom_segment(aes(x = 14.8, y = 0.52, xend = 14.8, yend = 0.325)) +
geom_segment(aes(x = 0.4, y = 0.33-y_offset, xend = 1, yend = 0.33-y_offset), color = color_vector[1], linetype = line_types[1]) +
geom_segment(aes(x = 0.4, y = 0.30-y_offset, xend = 1, yend = 0.30-y_offset), color = color_vector[3], linetype = line_types[3]) +
geom_segment(aes(x = 0.4, y = 0.271-y_offset, xend = 1, yend = 0.271-y_offset), color = color_vector[5], linetype = line_types[5]) +
geom_segment(aes(x = 1.5, y = 0.33-y_offset, xend = 2.1, yend = 0.33-y_offset), color = color_vector[2], linetype = line_types[2]) +
geom_segment(aes(x = 1.5, y = 0.30-y_offset, xend = 2.1, yend = 0.30-y_offset), color = color_vector[4], linetype = line_types[4]) +
geom_segment(aes(x = 1.5, y = 0.271-y_offset, xend = 2.1, yend = 0.271-y_offset), color = color_vector[6], linetype = line_types[6]) +
annotate("text", x = 0.4, y = 0.36-y_offset, label = "sham"   , color = "black", size = 3, fontface = "bold", hjust = 0) +
annotate("text", x = 1.5, y = 0.36-y_offset, label = "fungus" , color = "black", size = 3, fontface = "bold", hjust = 0) +
annotate("text", x = 2.7, y = 0.36-y_offset, label = "c [ppm]", color = "black", size = 3, fontface = "bold", hjust = 0) +
annotate("text", x = 2.7, y = 0.33-y_offset, label = "0 ppm"  , color = "black", size = 3, fontface = "plain", hjust = 0) +
annotate("text", x = 2.7, y = 0.30-y_offset, label = "5 ppm"  , color = "black", size = 3, fontface = "plain", hjust = 0) +
annotate("text", x = 2.7, y = 0.27-y_offset, label = "50 ppm" , color = "black", size = 3, fontface = "plain", hjust = 0) +
# annotate("text", x=15.5, y=0.71, label="n.s       ", color = "black", size = 3, fontface = "bold") +
# annotate("text", x=15.5, y=0.42, label=" p = 0.01", color = "black", size = 3, fontface = "bold") +
geom_rect(aes(xmin = 0.2, xmax = 4, ymin = 0.2, ymax = 0.38 - y_offset),
fill = NA, color = "black", lwd = 0.05) +
scale_x_continuous(breaks = seq(0, 14, by = 2)) +
geom_segment(aes(x = 0.2, y = 0.2925, xend = 4, yend = 0.2925), color = "black", linewidth = 0.05) +
geom_segment(aes(x = 2.5, y = 0.2, xend = 2.5, yend = 0.33), color = "black", linewidth = 0.05) +
# shapes in legend
geom_point(data = endpoints[c(1,3,5),],
aes(x = 1.1, y = y_legend-y_offset, shape = shape),
size = 1.5, stroke = 0.8, color = color_vector[c(1,3,5)], fill = NA)+
geom_point(data = endpoints[c(1,3,5),],
aes(x = 2.2, y = y_legend-y_offset, shape = shape),
size = 1.5, stroke = 0.8, color = color_vector[c(2,4,6)], fill = color_vector[c(2,4,6)])+
# cld letters
geom_text(data = y_coordinates,
aes(x = 15, y = prop_surviving - 0.000, label = labeling_cld),
size = 4, hjust = 0, vjust = 0.5, inherit.aes = FALSE, fontface = "bold") +
# concentration labeling
geom_text(data = y_coordinates,
aes(x = 14.5, y = prop_surviving, label = labeling),
size = 4, hjust = 0, vjust = 0.5, inherit.aes = FALSE) +
annotate("text", x = 14.2, y = 0.85, label = "c [ppm]", size = 4, hjust = 0, fontface = "bold") +
# shapes at end of curves
geom_point(data = endpoints[c(2,4,6), ],  # First 3: unfilled
aes(x = time + 0.1, y = surv, shape = shape),
size = 2, stroke = 1, color = rev(color_vector)[c(2,4,6)], fill = NA) +
geom_point(data = endpoints[c(1,3,5), ],  # Last 3: filled
aes(x = time + 0.1, y = surv, shape = shape),
size = 2, stroke = 1, color = rev(color_vector)[c(1,3,5)], fill = color_vector[c(2,4,6)]) +
scale_shape_identity()
print(surv_plot)
surv_ggplot <- surv_plot$plot
### Plot B - Hazard plot depicting M. brunneum hazard in dependence of pesticide concentration
hazard_plot <- ggplot(hr_data, aes(x = Treatment, y = HR)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black", width = 0.8) +
geom_errorbar(aes(ymin = HR_lo, ymax = HR_hi), width = 0.1, lwd = 1.2) + # Error bars for confidence intervals
labs(y = "Fungus Hazard Ratio (HR)",
x = "Flupyradifurone concentration") +
theme_bw() +
theme(plot.margin = margin(20, 10, 10, 10),
panel.grid = element_blank(), legend.position = "none",
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
axis.ticks = element_line(linewidth = 1),
strip.text = element_text(size = 14)) +
annotate("text", x = 0.96, y = 5.35, label = "a", color = "black", size = 6, fontface = "bold", hjust = 0) +
annotate("text", x = 1.96, y = 5.35, label = "b", color = "black", size = 6, fontface = "bold", hjust = 0) +
annotate("text", x = 2.96, y = 5.35, label = "b", color = "black", size = 6, fontface = "bold", hjust = 0) +
coord_cartesian(ylim=c(1,5.5))  # Setting y-axis limit to start from 1
### model
flugus_data$concentration <- as.factor(flugus_data$concentration)
flugus_data$interac <- interaction(flugus_data$fungus,flugus_data$concentration)
null_model            <- coxme ( Surv (time = survival, event = censor) ~ 1                              + (1 | petri_dish) + (1 | colony) + (1 | block), data = flugus_data)
concentration_model   <- coxme ( Surv (time = survival, event = censor) ~ 1 + concentration              + (1 | petri_dish) + (1 | colony) + (1 | block), data = flugus_data)
additive_model        <- coxme ( Surv (time = survival, event = censor) ~ 1 + concentration + fungus     + (1 | petri_dish) + (1 | colony) + (1 | block), data = flugus_data)
interaction_model     <- coxme ( Surv (time = survival, event = censor) ~ 1 + concentration * fungus     + (1 | petri_dish) + (1 | colony) + (1 | block), data = flugus_data)
interaction_model_bis <- coxme ( Surv (time = survival, event = censor) ~ 1 + interac                    + (1 | petri_dish) + (1 | colony) + (1 | block), data = flugus_data)
anova(null_model, concentration_model, additive_model, interaction_model)
anova(additive_model, interaction_model)
Anova(interaction_model)
summary(interaction_model)
### full contrasts for pairwise comparisons:
contrast_matrix_Tukey <-  rbind(
"1 minus 2"=c(-1,0,0,0,0)
,"1 minus 3"=c(0,-1,0,0,0)
,"1 minus 4"=c(0,0,-1,0,0)
,"1 minus 5"=c(-1,0,-1,-1,0)
,"1 minus 6"=c(0,-1,-1,0,-1)
,"2 minus 3"=c(1,-1,0,0,0)
,"2 minus 4"=c(1,0,-1,0,0)
,"2 minus 5"=c(0,0,-1,-1,0)
,"2 minus 6"=c(1,-1,-1,0,-1)
,"3 minus 4"=c(0,1,-1,0,0)
,"3 minus 5"=c(-1,1,-1,-1,0)
,"3 minus 6"=c(0,0,-1,0,-1)
,"4 minus 5"=c(-1,0,0,-1,0)
,"4 minus 6"=c(0,-1,0,0,-1)
,"5 minus 6"=c(1,-1,0,1,-1)
)
posthocs_Tukey_1 <- summary(glht(interaction_model,linfct=contrast_matrix_Tukey),test=adjusted("BH"))
posthocs_Tukey_1
posthocs_Tukey_2 <- summary(glht(interaction_model_bis,linfct=mcp(interac="Tukey")),test=adjusted("BH"))
posthocs_Tukey_2
cld(posthocs_Tukey_2)
### fungus hazard contrasting
contrast_matrix <- rbind(
"Delta50"=c(0,0,1,0,1),
"Delta5"=c(0,0,1,1,0),
"DeltaControl"=c(0,0,1,0,0),
"Delta50 minus Delta5"=c(0,0,0,-1,1),
"Delta50 minus DeltaControl"=c(0,0,0,0,1),
"Delta5 minus DeltaControl"=c(0,0,0,1,0),
"sham-50 minus sham-0"=c(0, 1, 0, 0, 0),
"sham-50 minussham-5"=c( -1, 1, 0, 0, 0),
"sham5 minus sham0"= c(1, 0, 0, 0,0)
)
posthocs <- summary(glht(interaction_model,linfct=contrast_matrix),test=adjusted("BH"))
# for plot:
# delta mortality change by fungus depending on flupy concentration
HR_control <- exp(posthocs$test$coefficients["DeltaControl"]) #increase in mortality rate caused by the fungus in the no-FPF group
HR_control_lo <- exp(posthocs$test$coefficients["DeltaControl"] - posthocs$test$sigma["DeltaControl"])
HR_control_hi <- exp(posthocs$test$coefficients["DeltaControl"] + posthocs$test$sigma["DeltaControl"])
HR_5 <- exp(posthocs$test$coefficients["Delta5"]) #increase in mortality rate caused by the fungus in the FPF 5 group
HR_5_lo <- exp(posthocs$test$coefficients["Delta5"] - posthocs$test$sigma["Delta5"])
HR_5_hi <- exp(posthocs$test$coefficients["Delta5"] + posthocs$test$sigma["Delta5"])
HR_50 <- exp(posthocs$test$coefficients["Delta50"]) #increase in mortality rate caused by the fungus in the FPF 50 group
HR_50_lo <- exp(posthocs$test$coefficients["Delta50"] - posthocs$test$sigma["Delta50"])
HR_50_hi <- exp(posthocs$test$coefficients["Delta50"] + posthocs$test$sigma["Delta50"])
hr_data <- data.frame(
Treatment = c("0 ppm", "5 ppm", "50 ppm"),
HR = c(HR_control, HR_5, HR_50),
HR_lo = c(HR_control_lo, HR_5_lo, HR_50_lo),
HR_hi = c(HR_control_hi, HR_5_hi, HR_50_hi))
#### 3.2 Plot ####
### Plot A - Survival plot for the FPF Fungus interaction test
surviplot <- survfit(Surv (time = survival, event = censor) ~ 1 + concentration + fungus, data=flugus_data)
# aggregate(censor ~ fungus + concentration, FUN=mean,data=flugus_data)
chosen_colors <- viridis(2, option = 2, begin = 0.2, end = 0.85)
# show_col(chosen_colors, labels = TRUE, borders = NULL)
color_vector <- rep(chosen_colors, 3)
y_offset <- 0.05
line_types <- rep(c("dotdash", "longdash", "solid"), each = 2)
y_coordinates <- flugus_data %>% group_by(concentration, fungus) %>%
summarize(prop_surviving = sum(censor==0) / n(),
mean_censor = mean(censor))  %>%
arrange(desc(prop_surviving)) %>% as.data.frame()
labeling <- c("  5 -","50 -","  0 -","  0 -","  5 -","50 -")
labeling_cld <- c("  a","  a","  a","  b"," bc","  c")
# Get endpoints of lines.
strata_names <- rep(names(surviplot$strata), surviplot$strata)
endpoints_df <- data.frame(
time = surviplot$time,
surv = surviplot$surv,
strata = strata_names)
shapes <- c("0" = 21, "5" = 22, "50" = 24)
y_legend_values <- c("0" = 0.33, "5" = 0.30, "50" = 0.271)
endpoints <- endpoints_df %>%
group_by(strata) %>%
slice_tail(n = 1) %>%
mutate(
concentration = str_extract(strata, "(?<=concentration=)\\d+"),
shape = as.numeric(shapes[concentration]),
y_legend = y_legend_values[concentration]  # Map concentration directly to y_legend
)
surv_plot <- ggsurvplot(surviplot, data = flugus_data,
pval = FALSE,
linetype = line_types,
lwd = 0.8,
xlab = 'Time (days)', ylab = 'Proportion Surviving',
palette = color_vector,
ggtheme = theme_bw(),
xlim = c(0, 15),
censor = FALSE,
conf.int = TRUE,
conf.int.alpha = 0.25,
legend = c(0.4, 0.25),
legend.title = "Treatments")
surv_plot$plot <- surv_plot$plot +
scale_y_continuous(limits = c(0.2, 1), breaks = seq(0.2, 1, by = 0.2)) +
theme(panel.grid = element_blank(), legend.position = "none") +
theme(plot.margin = margin(20, 10, 10, 10),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
axis.ticks = element_line(linewidth = 1),
strip.text = element_text(size = 14)) +
# geom_segment(aes(x = 14.8, y = 0.78, xend = 14.8, yend = 0.65))+
# geom_segment(aes(x = 14.8, y = 0.52, xend = 14.8, yend = 0.325)) +
geom_segment(aes(x = 0.4, y = 0.33-y_offset, xend = 1, yend = 0.33-y_offset), color = color_vector[1], linetype = line_types[1]) +
geom_segment(aes(x = 0.4, y = 0.30-y_offset, xend = 1, yend = 0.30-y_offset), color = color_vector[3], linetype = line_types[3]) +
geom_segment(aes(x = 0.4, y = 0.271-y_offset, xend = 1, yend = 0.271-y_offset), color = color_vector[5], linetype = line_types[5]) +
geom_segment(aes(x = 1.5, y = 0.33-y_offset, xend = 2.1, yend = 0.33-y_offset), color = color_vector[2], linetype = line_types[2]) +
geom_segment(aes(x = 1.5, y = 0.30-y_offset, xend = 2.1, yend = 0.30-y_offset), color = color_vector[4], linetype = line_types[4]) +
geom_segment(aes(x = 1.5, y = 0.271-y_offset, xend = 2.1, yend = 0.271-y_offset), color = color_vector[6], linetype = line_types[6]) +
annotate("text", x = 0.4, y = 0.36-y_offset, label = "sham"   , color = "black", size = 3, fontface = "bold", hjust = 0) +
annotate("text", x = 1.5, y = 0.36-y_offset, label = "fungus" , color = "black", size = 3, fontface = "bold", hjust = 0) +
annotate("text", x = 2.7, y = 0.36-y_offset, label = "c [ppm]", color = "black", size = 3, fontface = "bold", hjust = 0) +
annotate("text", x = 2.7, y = 0.33-y_offset, label = "0 ppm"  , color = "black", size = 3, fontface = "plain", hjust = 0) +
annotate("text", x = 2.7, y = 0.30-y_offset, label = "5 ppm"  , color = "black", size = 3, fontface = "plain", hjust = 0) +
annotate("text", x = 2.7, y = 0.27-y_offset, label = "50 ppm" , color = "black", size = 3, fontface = "plain", hjust = 0) +
# annotate("text", x=15.5, y=0.71, label="n.s       ", color = "black", size = 3, fontface = "bold") +
# annotate("text", x=15.5, y=0.42, label=" p = 0.01", color = "black", size = 3, fontface = "bold") +
geom_rect(aes(xmin = 0.2, xmax = 4, ymin = 0.2, ymax = 0.38 - y_offset),
fill = NA, color = "black", lwd = 0.05) +
scale_x_continuous(breaks = seq(0, 14, by = 2)) +
geom_segment(aes(x = 0.2, y = 0.2925, xend = 4, yend = 0.2925), color = "black", linewidth = 0.05) +
geom_segment(aes(x = 2.5, y = 0.2, xend = 2.5, yend = 0.33), color = "black", linewidth = 0.05) +
# shapes in legend
geom_point(data = endpoints[c(1,3,5),],
aes(x = 1.1, y = y_legend-y_offset, shape = shape),
size = 1.5, stroke = 0.8, color = color_vector[c(1,3,5)], fill = NA)+
geom_point(data = endpoints[c(1,3,5),],
aes(x = 2.2, y = y_legend-y_offset, shape = shape),
size = 1.5, stroke = 0.8, color = color_vector[c(2,4,6)], fill = color_vector[c(2,4,6)])+
# cld letters
geom_text(data = y_coordinates,
aes(x = 15, y = prop_surviving - 0.000, label = labeling_cld),
size = 4, hjust = 0, vjust = 0.5, inherit.aes = FALSE, fontface = "bold") +
# concentration labeling
geom_text(data = y_coordinates,
aes(x = 14.5, y = prop_surviving, label = labeling),
size = 4, hjust = 0, vjust = 0.5, inherit.aes = FALSE) +
annotate("text", x = 14.2, y = 0.85, label = "c [ppm]", size = 4, hjust = 0, fontface = "bold") +
# shapes at end of curves
geom_point(data = endpoints[c(2,4,6), ],  # First 3: unfilled
aes(x = time + 0.1, y = surv, shape = shape),
size = 2, stroke = 1, color = rev(color_vector)[c(2,4,6)], fill = NA) +
geom_point(data = endpoints[c(1,3,5), ],  # Last 3: filled
aes(x = time + 0.1, y = surv, shape = shape),
size = 2, stroke = 1, color = rev(color_vector)[c(1,3,5)], fill = color_vector[c(2,4,6)]) +
scale_shape_identity()
print(surv_plot)
surv_ggplot <- surv_plot$plot
### Plot B - Hazard plot depicting M. brunneum hazard in dependence of pesticide concentration
hazard_plot <- ggplot(hr_data, aes(x = Treatment, y = HR)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black", width = 0.8) +
geom_errorbar(aes(ymin = HR_lo, ymax = HR_hi), width = 0.1, lwd = 1.2) + # Error bars for confidence intervals
labs(y = "Fungus Hazard Ratio (HR)",
x = "Flupyradifurone concentration") +
theme_bw() +
theme(plot.margin = margin(20, 10, 10, 10),
panel.grid = element_blank(), legend.position = "none",
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
axis.ticks = element_line(linewidth = 1),
strip.text = element_text(size = 14)) +
annotate("text", x = 0.96, y = 5.35, label = "a", color = "black", size = 6, fontface = "bold", hjust = 0) +
annotate("text", x = 1.96, y = 5.35, label = "b", color = "black", size = 6, fontface = "bold", hjust = 0) +
annotate("text", x = 2.96, y = 5.35, label = "b", color = "black", size = 6, fontface = "bold", hjust = 0) +
coord_cartesian(ylim=c(1,5.5))  # Setting y-axis limit to start from 1
print(hazard_plot)
### Generate 2 panel plot | Exported as 1200*500 clip
layout_mat <- rbind(c(1,1,2), c(1,1,2))
label_a <- textGrob("a", x = unit(0, "npc") + unit(5, "mm"), y = unit(1, "npc") - unit(5, "mm"), just = c("left", "top"), gp = gpar(fontsize = 20, fontface = "bold"))
label_b <- textGrob("b", x = unit(0, "npc") + unit(5, "mm"), y = unit(1, "npc") - unit(5, "mm"), just = c("left", "top"), gp = gpar(fontsize = 20, fontface = "bold"))
suppressWarnings(grid.arrange(
arrangeGrob(surv_ggplot, top = label_a),
arrangeGrob(hazard_plot, top = label_b),
layout_matrix = layout_mat))
