time <= current_feedings$feeding_end_seconds
)
)
} else {
current_grid <- current_grid %>%
mutate(cumulated_exploitation_time = 0,
exploitation_rate = 0)
}
cumulative_explotation_over_time <- bind_rows(cumulative_explotation_over_time, current_grid)
}
}
cumulative_explotation_over_time <- cumulative_explotation_over_time %>% left_join(colony_metadata, by = "colony_id")
assign(paste0("cumulative_explotation_", var), cumulative_explotation_over_time)
}
#### 4.2.3 plot mean exploitation over time per food source or food discovery time ####
# aggregate data and calculate means of duration for plotting of exploitation rate per food source
# for (dataset in c("cumulative_explotation_food_source", "cumulative_explotation_food_source_timed")) {
# data <- get(dataset)
### based on food type
mean_exploitation_time <- cumulative_explotation_food_source %>%
group_by(time, food_source) %>%
summarize(mean_time = mean(cumulated_exploitation_time, na.rm = TRUE),
sd = sd(cumulated_exploitation_time, na.rm = TRUE),
sem = sem(cumulated_exploitation_time))
title_lab_1 <- paste0("Food based - Cum Exploit (T0 = ", start_time, ")")
print(ggplot(mean_exploitation_time, aes(x = time, y = mean_time, color = food_source)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = mean_time - sem, ymax = mean_time + sem, fill = food_source), alpha = 0.2) +
labs(title = title_lab_1,
x = "Time",
y = "Mean Cumulated Exploitation Time (seconds)") +
scale_color_manual(values = c("virus" = "#FBB4AE", "control" = "#CCEBC5")) +
theme_bw() +
theme(legend.title = element_blank())+
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
### based on discovery time
mean_exploitation_time <- cumulative_explotation_food_source_timed %>%
group_by(time, food_source_timed) %>%
summarize(mean_time = mean(cumulated_exploitation_time, na.rm = TRUE),
sd = sd(cumulated_exploitation_time, na.rm = TRUE),
sem = sem(cumulated_exploitation_time))
title_lab_1 <- paste0("Time based - Cum Exploitat (T0 = ", start_time, ")")
print(ggplot(mean_exploitation_time, aes(x = time, y = mean_time, color = food_source_timed)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = mean_time - sem, ymax = mean_time + sem, fill = food_source_timed), alpha = 0.2) +
labs(title = title_lab_1,
x = "Time",
y = "Mean Cumulated Exploitation Time (seconds)") +
scale_color_manual(values = c("first" = "#FBB4AE", "second" = "#CCEBC5")) +
theme_bw() +
theme(legend.title = element_blank())+
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
#### 4.2.4 Plot exploitation rate over time per food source or food discovery time ####
### based on food type
mean_exploitation_rate <- cumulative_explotation_food_source %>%
group_by(time, food_source) %>%
summarize(mean_exploitation = mean(exploitation_rate, na.rm = TRUE),
sd = sd(exploitation_rate, na.rm = TRUE))
title_lab_2 <- paste0("Food-based Exploitation Rate (T0 = ", start_time, ")")
print(ggplot(mean_exploitation_rate, aes(x = time, y = mean_exploitation, color = food_source)) +
geom_line(size = 0.5) +
labs(title = title_lab_2,
x = "Time",
y = "Mean Cumulated Exploitation Time (seconds)") +
scale_color_manual(values = c("virus" = "#FBB4AE", "control" = "#CCEBC5")) +
theme_bw() +
theme(legend.title = element_blank())+
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
### based on discovery time
mean_exploitation_rate <- cumulative_explotation_food_source_timed %>%
group_by(time, food_source_timed) %>%
summarize(mean_exploitation = mean(exploitation_rate, na.rm = TRUE),
sd = sd(exploitation_rate, na.rm = TRUE))
title_lab_2 <- paste0("Time-based Exploitation Rate (T0 = ", start_time, ")")
print(ggplot(mean_exploitation_rate, aes(x = time, y = mean_exploitation, color = food_source_timed)) +
geom_line(size = 0.5) +
labs(title = title_lab_2,
x = "Time",
y = "Mean Cumulated Exploitation Time (seconds)") +
scale_color_manual(values = c("first" = "#FBB4AE", "second" = "#CCEBC5")) +
theme_bw() +
theme(legend.title = element_blank())+
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
#### 4.2.5 Stats - Mean exploitation rate per food source ####
summary_dat_duration <- cumulative_explotation_food_source %>%
group_by(colony_id, food_source) %>%
summarise(mean_exploitation_rate = mean(exploitation_rate)) %>%
left_join(colony_metadata, by = "colony_id") %>% as.data.frame()
#stats
print( paste("Statistics - T0 = ",start_time))
summary_dat_duration$first_source_fed_on_binary <- summary_dat_duration$food_source==summary_dat_duration$first_source_fed_on
# model <- lmer(log10(mean_exploitation_rate) ~ food_source + (1|colony_id) + (1|first_source_fed_on), data=summary_dat_duration )
# print(Anova(model))
# test_norm(model)
model <- lmer((mean_exploitation_rate) ~ food_source*first_source_fed_on_binary + (1|colony_id) , data=summary_dat_duration)
test_norm(model)
print(Anova(model)) # interaction non-significant --> it will be left away
model <- lmer((mean_exploitation_rate) ~ food_source+first_source_fed_on_binary + (1|colony_id) , data=summary_dat_duration )
test_norm(model)
print(Anova(model)) # food source is not significant while time of discovery is
# based on this we would say that it is only first discovery and not food source that drives the preference.
#### 4.2.6 PLOT: Delta exploitation rate based on first discovery ####
# pivot data to wide format so virus and control exploitation rates are side-by-side and calculate
exploitation_delta <- cumulative_explotation_food_source %>%
dplyr::select(colony_id, time, food_source, exploitation_rate, first_source_fed_on) %>%
pivot_wider(
names_from = food_source,
values_from = exploitation_rate,
names_prefix = "exploitation_rate_"
) %>%
mutate(
delta_exploitation_rate = if_else(first_source_fed_on == "virus", exploitation_rate_virus - exploitation_rate_control, exploitation_rate_control - exploitation_rate_virus),
first_discovered = first_source_fed_on) %>% as.data.frame()
ggplot(exploitation_delta, aes(x = time, y = delta_exploitation_rate, color = first_discovered, fill = first_discovered)) +
stat_summary(fun = mean, geom = "line", size = 0.5, alpha = 0.5) + # raw
# stat_summary(fun.data = mean_se, geom = "ribbon", alpha = 0.5, color = NA) + # raw
# geom_smooth(method = "loess", se = TRUE, size = 0.8, span = 0.2) + # slow when using a lot of data.
geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = TRUE, size = 0.8) + #faster than method loess
geom_hline(yintercept = 0, linetype = "dashed", color = "grey30") +
scale_color_manual(values = c("virus" = "#E41A1C", "control" = "#4DAF4A")) +
scale_fill_manual(values = c("virus" = "#FBB4AE", "control" = "#CCEBC5")) +
labs(title = "Delta Exploitation Rate",
x = "Time (s)",
y = "Î” Exploitation Rate (First - Second)",
color = "Discovered first",
fill = "Discovered first") +
theme_minimal(base_size = 13) +
theme(
panel.border = element_rect(fill = NA),
axis.line = element_line(),
legend.position = "right")
summary_exploitation_delta <- exploitation_delta %>%
group_by(colony_id, first_discovered) %>%
summarise(mean_exploitation_rate = mean(delta_exploitation_rate)) %>% as.data.frame()
summary_dat_duration_first  <- summary_dat_duration[which(summary_dat_duration$first_source_fed_on_binary),c("colony_id","exploitation_rate","first_source_fed_on")]
names(summary_dat_duration)
summary_dat_duration_first  <- summary_dat_duration[which(summary_dat_duration$first_source_fed_on_binary),c("colony_id","mean_exploitation_rate","first_source_fed_on")]
names(summary_dat_duration_first)[names(summary_dat_duration_first)=="mean_exploitation_rate"] <- "exploitation_rate_first_source_discovered"
summary_dat_duration_second <- summary_dat_duration[which(!summary_dat_duration$first_source_fed_on_binary),c("colony_id","mean_exploitation_rate","first_source_fed_on")]
names(summary_dat_duration_second)[names(summary_dat_duration_second)=="mean_exploitation_rate"] <- "exploitation_rate_second_source_discovered"
summary_dat_duration_differential <- merge(summary_dat_duration_first,summary_dat_duration_second)
summary_dat_duration_differential$exploitation_rate_differential <- summary_dat_duration_differential$exploitation_rate_first_source_discovered - summary_dat_duration_differential$exploitation_rate_second_source_discovered
aggregate(exploitation_rate_differential~first_source_fed_on,function(x)cbind(mean(x),std.error(x)),data=summary_dat_duration_differential)
summary_dat_duration_differential
summary_exploitation_delta
summary_exploitation_delta <- exploitation_delta %>%
group_by(colony_id, first_discovered) %>%
summarise(mean_delta_exploitation_rate = mean(delta_exploitation_rate)) %>% as.data.frame()
summary_exploitation_delta %>%
group_by(first_discovered) %>%
summarise(mean_delta = mean(exploitation_rate_differential, na.rm = TRUE),
se_delta = sd(exploitation_rate_differential, na.rm = TRUE) / sqrt(n()))
summary_exploitation_delta %>%
group_by(first_discovered) %>%
summarise(mean_delta = mean(delta_exploitation_rate, na.rm = TRUE),
se_delta = sd(delta_exploitation_rate, na.rm = TRUE) / sqrt(n()))
summary_exploitation_delta
summary_exploitation_delta %>%
group_by(first_discovered) %>%
summarise(mean_delta = mean(mean_delta_exploitation_rate, na.rm = TRUE),
se_delta = sd(mean_delta_exploitation_rate, na.rm = TRUE) / sqrt(n()))
aggregate(exploitation_rate_differential~first_source_fed_on,function(x)cbind(mean(x),std.error(x)),data=summary_dat_duration_differential)
model <- lm((exploitation_rate_differential) ~ first_source_fed_on  , data=summary_dat_duration_differential )
print(shapiro.test(residuals(model))) # for shifted t0 not significant...
test_norm(model)
print(Anova(model))
cumulative_explotation_food_source$first_source_fed_on_binary <- cumulative_explotation_food_source$food_source==cumulative_explotation_food_source$first_source_fed_on
cumulative_explotation_over_time_first  <- cumulative_explotation_food_source[which(cumulative_explotation_food_source$first_source_fed_on_binary),c("colony_id","time","cumulated_exploitation_time","exploitation_rate","first_source_fed_on")]
names(cumulative_explotation_over_time_first)[names(cumulative_explotation_over_time_first)%in%c("cumulated_exploitation_time","exploitation_rate")] <- paste(  names(cumulative_explotation_over_time_first)[names(cumulative_explotation_over_time_first)%in%c("cumulated_exploitation_time","exploitation_rate")] ,"_first_source_discovered",sep="")
cumulative_explotation_over_time_second <- cumulative_explotation_food_source[which(!cumulative_explotation_food_source$first_source_fed_on_binary),c("colony_id","time","cumulated_exploitation_time","exploitation_rate","first_source_fed_on")]
names(cumulative_explotation_over_time_second)[names(cumulative_explotation_over_time_second)%in%c("cumulated_exploitation_time","exploitation_rate")] <- paste(  names(cumulative_explotation_over_time_second)[names(cumulative_explotation_over_time_second)%in%c("cumulated_exploitation_time","exploitation_rate")] ,"_second_source_discovered",sep="")
cumulative_explotation_over_time_differential <- merge(cumulative_explotation_over_time_first,cumulative_explotation_over_time_second)
cumulative_explotation_over_time_differential$exploitation_rate_differential <- cumulative_explotation_over_time_differential$exploitation_rate_first_source_discovered - cumulative_explotation_over_time_differential$exploitation_rate_second_source_discovered
cumulative_explotation_over_time_differential$cumulated_exploitation_time_differential <- cumulative_explotation_over_time_differential$cumulated_exploitation_time_first_source_discovered - cumulative_explotation_over_time_differential$cumulated_exploitation_time_second_source_discovered
aggregate(exploitation_rate_differential~first_source_fed_on,function(x)cbind(mean(x),std.error(x)),data=cumulative_explotation_over_time_differential)
plot_data <- summary_dat_duration %>%
group_by(food_source) %>%
summarize(
mean_exploitation_rate = mean(exploitation_rate, na.rm = TRUE),
se_exploitation_rate = sd(exploitation_rate, na.rm = TRUE) / sqrt(n()),
.groups = 'drop') %>% as.data.frame()
summary_dat_duration
plot_data <- summary_dat_duration %>%
group_by(food_source) %>%
summarize(
mean_exploitation_rate = mean(mean_exploitation_rate, na.rm = TRUE),
se_exploitation_rate = sd(mean_exploitation_rate, na.rm = TRUE) / sqrt(n()),
.groups = 'drop') %>% as.data.frame()
# stats on the mean exploitation rate
title_lab_3 <- paste0("Mean Exploitation Rate (T0 = ", start_time, ")")
p_val <- paste0("p = ", pvalue, "(lmer)")
p <- ggplot(plot_data, aes(x = food_source, y = mean_exploitation_rate, fill = food_source)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean_exploitation_rate - se_exploitation_rate,
ymax = mean_exploitation_rate + se_exploitation_rate),
width = 0.2) +
labs(
x = "Food Source",
y = "Exploitation Rate (Mean Â± SE)",
title = title_lab_3) +
scale_fill_manual(values = c("virus" = "#FBB4AE", "control" = "#CCEBC5")) +
theme_bw() +
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_segment(aes(x = 1.1, xend = 1.9 , y = 1.05 * max(mean_exploitation_rate, na.rm = TRUE),
yend = 1.05 * max(mean_exploitation_rate, na.rm = TRUE)),
color = "black", size = 0.25) +
annotate("text", x = 1.5, y = 1.1 * max(plot_data$mean_exploitation_rate, na.rm = TRUE),
label = p_val, color = "black", size = 3)
print(p)
# stats on the mean exploitation rate
title_lab_3 <- paste0("Mean Exploitation Rate (T0 = ", start_time, ")")
p_val <- paste0("p = ", pvalue, "(lmer)")
# p_val <- paste0("p = ", pvalue, "(lmer)")
p <- ggplot(plot_data, aes(x = food_source, y = mean_exploitation_rate, fill = food_source)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean_exploitation_rate - se_exploitation_rate,
ymax = mean_exploitation_rate + se_exploitation_rate),
width = 0.2) +
labs(
x = "Food Source",
y = "Exploitation Rate (Mean Â± SE)",
title = title_lab_3) +
scale_fill_manual(values = c("virus" = "#FBB4AE", "control" = "#CCEBC5")) +
theme_bw() +
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_segment(aes(x = 1.1, xend = 1.9 , y = 1.05 * max(mean_exploitation_rate, na.rm = TRUE),
yend = 1.05 * max(mean_exploitation_rate, na.rm = TRUE)),
color = "black", size = 0.25) +
# annotate("text", x = 1.5, y = 1.1 * max(plot_data$mean_exploitation_rate, na.rm = TRUE),
#          label = p_val, color = "black", size = 3)
print(p)
# p_val <- paste0("p = ", pvalue, "(lmer)")
p <- ggplot(plot_data, aes(x = food_source, y = mean_exploitation_rate, fill = food_source)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean_exploitation_rate - se_exploitation_rate,
ymax = mean_exploitation_rate + se_exploitation_rate),
width = 0.2) +
labs(
x = "Food Source",
y = "Exploitation Rate (Mean Â± SE)",
title = title_lab_3) +
scale_fill_manual(values = c("virus" = "#FBB4AE", "control" = "#CCEBC5")) +
theme_bw() +
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_segment(aes(x = 1.1, xend = 1.9 , y = 1.05 * max(mean_exploitation_rate, na.rm = TRUE),
yend = 1.05 * max(mean_exploitation_rate, na.rm = TRUE)),
color = "black", size = 0.25)
# annotate("text", x = 1.5, y = 1.1 * max(plot_data$mean_exploitation_rate, na.rm = TRUE),
#          label = p_val, color = "black", size = 3)
print(p)
### based on discovery time
mean_exploitation_rate <- cumulative_explotation_food_source_timed %>%
group_by(time, food_source_timed) %>%
summarize(mean_exploitation = mean(exploitation_rate, na.rm = TRUE),
sd = sd(exploitation_rate, na.rm = TRUE))
title_lab_2 <- paste0("Time-based Exploitation Rate (T0 = ", start_time, ")")
print(ggplot(mean_exploitation_rate, aes(x = time, y = mean_exploitation, color = food_source_timed)) +
geom_line(size = 0.5) +
labs(title = title_lab_2,
x = "Time",
y = "Mean Cumulated Exploitation Time (seconds)") +
scale_color_manual(values = c("first" = "#FBB4AE", "second" = "#CCEBC5")) +
theme_bw() +
theme(legend.title = element_blank())+
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
### based on food type
mean_exploitation_rate <- cumulative_explotation_food_source %>%
group_by(time, food_source) %>%
summarize(mean_exploitation = mean(exploitation_rate, na.rm = TRUE),
sd = sd(exploitation_rate, na.rm = TRUE))
title_lab_2 <- paste0("Food-based Exploitation Rate (T0 = ", start_time, ")")
print(ggplot(mean_exploitation_rate, aes(x = time, y = mean_exploitation, color = food_source)) +
geom_line(size = 0.5) +
labs(title = title_lab_2,
x = "Time",
y = "Mean Cumulated Exploitation Time (seconds)") +
scale_color_manual(values = c("virus" = "#FBB4AE", "control" = "#CCEBC5")) +
theme_bw() +
theme(legend.title = element_blank())+
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
### no mean:
cumulative_explotation_food_source$first_source_fed_on_binary <- cumulative_explotation_food_source$food_source==cumulative_explotation_food_source$first_source_fed_on
cumulative_explotation_over_time_first  <- cumulative_explotation_food_source[which(cumulative_explotation_food_source$first_source_fed_on_binary),c("colony_id","time","cumulated_exploitation_time","exploitation_rate","first_source_fed_on")]
names(cumulative_explotation_over_time_first)[names(cumulative_explotation_over_time_first)%in%c("cumulated_exploitation_time","exploitation_rate")] <- paste(  names(cumulative_explotation_over_time_first)[names(cumulative_explotation_over_time_first)%in%c("cumulated_exploitation_time","exploitation_rate")] ,"_first_source_discovered",sep="")
cumulative_explotation_over_time_second <- cumulative_explotation_food_source[which(!cumulative_explotation_food_source$first_source_fed_on_binary),c("colony_id","time","cumulated_exploitation_time","exploitation_rate","first_source_fed_on")]
names(cumulative_explotation_over_time_second)[names(cumulative_explotation_over_time_second)%in%c("cumulated_exploitation_time","exploitation_rate")] <- paste(  names(cumulative_explotation_over_time_second)[names(cumulative_explotation_over_time_second)%in%c("cumulated_exploitation_time","exploitation_rate")] ,"_second_source_discovered",sep="")
cumulative_explotation_over_time_differential <- merge(cumulative_explotation_over_time_first,cumulative_explotation_over_time_second)
cumulative_explotation_over_time_differential$exploitation_rate_differential <- cumulative_explotation_over_time_differential$exploitation_rate_first_source_discovered - cumulative_explotation_over_time_differential$exploitation_rate_second_source_discovered
cumulative_explotation_over_time_differential$cumulated_exploitation_time_differential <- cumulative_explotation_over_time_differential$cumulated_exploitation_time_first_source_discovered - cumulative_explotation_over_time_differential$cumulated_exploitation_time_second_source_discovered
aggregate(exploitation_rate_differential~first_source_fed_on,function(x)cbind(mean(x),std.error(x)),data=cumulative_explotation_over_time_differential)
exploitation_delta %>%
group_by(first_source_fed_on) %>%
summarise(
mean_exploitation_rate_diff = mean(exploitation_rate_differential, na.rm = TRUE),
se_exploitation_rate_diff = sd(exploitation_rate_differential, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
names(exploitation_delta)
exploitation_delta %>%
group_by(first_source_fed_on) %>%
summarise(
mean_exploitation_rate_diff = mean(delta_exploitation_rate, na.rm = TRUE),
se_exploitation_rate_diff = sd(delta_exploitation_rate, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
exploitation_delta %>%
group_by(first_source_fed_on) %>%
summarise(
mean_exploitation_rate_diff = mean(delta_exploitation_rate, na.rm = TRUE),
se_exploitation_rate_diff = sd(delta_exploitation_rate, na.rm = TRUE) / sqrt(n()),
.groups = "drop") %>% as.data.frame()
aggregate(exploitation_rate_differential~first_source_fed_on,function(x)cbind(mean(x),std.error(x)),data=cumulative_explotation_over_time_differential)
model <- lmer((exploitation_rate_differential) ~ first_source_fed_on + (1|colony_id)  , data=cumulative_explotation_over_time_differential )
kurtosis(residuals(model))
skewness(residuals(model))
print(Anova(model))
pvalue <- round(Anova(model)$`Pr(>Chisq)`,2)
kurtosis(residuals(model))
skewness(residuals(model))
print(Anova(model))
model <- lmer(delta_exploitation_rate ~ first_source_fed_on + (1|colony_id)  , data=exploitation_delta )
kurtosis(residuals(model))
skewness(residuals(model))
print(Anova(model))
model <- lmer((cumulated_exploitation_time_differential) ~ first_source_fed_on*time + (1|colony_id)  , data=cumulative_explotation_over_time_differential )
kurtosis(residuals(model))
skewness(residuals(model))
summary(model)
print(Anova(model))
model <- lmer((exploitation_rate_differential) ~ first_source_fed_on + (1|colony_id)  , data=cumulative_explotation_over_time_differential )
print(Anova(model))
model <- lmer(delta_exploitation_rate ~ first_source_fed_on + (1|colony_id)  , data=exploitation_delta )
exploitation_delta
names(exploitation_delta)
names(cumulative_explotation_food_source)
#### 4.2.6 PLOT: Delta exploitation rate based on first discovery ####
# pivot data to wide format so virus and control exploitation rates are side-by-side and calculate
data_delta <- cumulative_explotation_food_source %>%
dplyr::select(colony_id, time, food_source, exploitation_rate, first_source_fed_on) %>%
pivot_wider(
names_from = food_source,
values_from = exploitation_rate,
names_prefix = "exploitation_rate_"
) %>%
mutate(
delta_exploitation_rate = if_else(first_source_fed_on == "virus", exploitation_rate_virus - exploitation_rate_control, exploitation_rate_control - exploitation_rate_virus),
delta_cumulated_exploitation_time = if_else(first_source_fed_on == "virus",
cumulated_exploitation_time_virus - cumulated_exploitation_time_control,
cumulated_exploitation_time_control - cumulated_exploitation_time_virus
),first_discovered = first_source_fed_on) %>% as.data.frame()
#### 4.2.6 PLOT: Delta exploitation rate based on first discovery ####
# pivot data to wide format so virus and control exploitation rates are side-by-side and calculate
data_delta <- cumulative_explotation_food_source %>%
dplyr::select(colony_id, time, food_source, exploitation_rate, first_source_fed_on) %>%
pivot_wider(
names_from = food_source,
values_from = c(exploitation_rate, cumulated_exploitation_time),
names_prefix = "exploitation_rate_"
) %>%
mutate(
delta_exploitation_rate = if_else(first_source_fed_on == "virus", exploitation_rate_virus - exploitation_rate_control, exploitation_rate_control - exploitation_rate_virus),
delta_cumulated_exploitation_time = if_else(first_source_fed_on == "virus",
cumulated_exploitation_time_virus - cumulated_exploitation_time_control,
cumulated_exploitation_time_control - cumulated_exploitation_time_virus
),first_discovered = first_source_fed_on) %>% as.data.frame()
#### 4.2.6 PLOT: Delta exploitation rate based on first discovery ####
# pivot data to wide format so virus and control exploitation rates are side-by-side and calculate
data_delta <- cumulative_explotation_food_source %>%
dplyr::select(colony_id, time, food_source, exploitation_rate, cumulated_exploitation_time, first_source_fed_on) %>%
pivot_wider(
names_from = food_source,
values_from = c(exploitation_rate, cumulated_exploitation_time),
names_prefix = "exploitation_rate_"
) %>%
mutate(
delta_exploitation_rate = if_else(first_source_fed_on == "virus", exploitation_rate_virus - exploitation_rate_control, exploitation_rate_control - exploitation_rate_virus),
delta_cumulated_exploitation_time = if_else(first_source_fed_on == "virus",
cumulated_exploitation_time_virus - cumulated_exploitation_time_control,
cumulated_exploitation_time_control - cumulated_exploitation_time_virus
),first_discovered = first_source_fed_on) %>% as.data.frame()
data_delta <- cumulative_explotation_food_source %>%
dplyr::select(colony_id, time, food_source, exploitation_rate, cumulated_exploitation_time, first_source_fed_on) %>%
pivot_wider(
names_from = food_source,
values_from = c(exploitation_rate, cumulated_exploitation_time)
) %>%
mutate(
delta_exploitation_rate = if_else(
first_source_fed_on == "virus",
exploitation_rate_virus - exploitation_rate_control,
exploitation_rate_control - exploitation_rate_virus
),
delta_cumulated_exploitation_time = if_else(
first_source_fed_on == "virus",
cumulated_exploitation_time_virus - cumulated_exploitation_time_control,
cumulated_exploitation_time_control - cumulated_exploitation_time_virus
),
first_discovered = first_source_fed_on
) %>%
as.data.frame()
data_delta <- cumulative_explotation_food_source %>%
dplyr::select(colony_id, time, food_source, exploitation_rate, cumulated_exploitation_time, first_source_fed_on) %>%
pivot_wider(
names_from = food_source,
values_from = c(exploitation_rate, cumulated_exploitation_time)
) %>%
mutate(delta_exploitation_rate = if_else(first_source_fed_on == "virus",
exploitation_rate_virus - exploitation_rate_control,
exploitation_rate_control - exploitation_rate_virus),
delta_cumulated_exploitation_time = if_else(first_source_fed_on == "virus",
cumulated_exploitation_time_virus - cumulated_exploitation_time_control,
cumulated_exploitation_time_control - cumulated_exploitation_time_virus),
first_discovered = first_source_fed_on) %>% as.data.frame()
ggplot(data_delta, aes(x = time, y = delta_exploitation_rate, color = first_discovered, fill = first_discovered)) +
stat_summary(fun = mean, geom = "line", size = 0.5, alpha = 0.5) + # raw
# stat_summary(fun.data = mean_se, geom = "ribbon", alpha = 0.5, color = NA) + # raw
# geom_smooth(method = "loess", se = TRUE, size = 0.8, span = 0.2) + # slow when using a lot of data.
geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = TRUE, size = 0.8) + #faster than method loess
geom_hline(yintercept = 0, linetype = "dashed", color = "grey30") +
scale_color_manual(values = c("virus" = "#E41A1C", "control" = "#4DAF4A")) +
scale_fill_manual(values = c("virus" = "#FBB4AE", "control" = "#CCEBC5")) +
labs(title = "Delta Exploitation Rate",
x = "Time (s)",
y = "Î” Exploitation Rate (First - Second)",
color = "Discovered first",
fill = "Discovered first") +
theme_minimal(base_size = 13) +
theme(
panel.border = element_rect(fill = NA),
axis.line = element_line(),
legend.position = "right")
exploitation_delta %>%
group_by(first_source_fed_on) %>%
summarise(
mean_exploitation_rate_diff = mean(delta_exploitation_rate, na.rm = TRUE),
se_exploitation_rate_diff = sd(delta_exploitation_rate, na.rm = TRUE) / sqrt(n()),
.groups = "drop") %>% as.data.frame()
model <- lmer((exploitation_rate_differential) ~ first_source_fed_on + (1|colony_id)  , data=cumulative_explotation_over_time_differential )
kurtosis(residuals(model))
skewness(residuals(model))
print(Anova(model))
#Update model code!!!
model <- lm((exploitation_rate_differential) ~ first_source_fed_on  , data=summary_dat_duration_differential )
test_norm(model)
print(Anova(model))
summary_exploitation_delta %>%
group_by(first_discovered) %>%
summarise(mean_delta = mean(mean_delta_exploitation_rate, na.rm = TRUE),
se_delta = sd(mean_delta_exploitation_rate, na.rm = TRUE) / sqrt(n())) %>% as.data.frame()
names (summary)
names (summary_exploitation_delta)
model <- lm((mean_delta_exploitation_rate) ~ first_discovered  , data=summary_exploitation_delta )
test_norm(model)
print(Anova(model))
model <- lmer((exploitation_rate_differential) ~ first_source_fed_on + (1|colony_id)  , data=cumulative_explotation_over_time_differential )
print(Anova(model))
names(data_delta)
#DS
model <- lmer((delta_exploitation_rate) ~ first_source_fed_on + (1|colony_id)  , data=data_delta)
print(Anova(model))
plot_data <- summary_dat_duration %>%
group_by(food_source) %>%
summarize(
mean_exploitation_rate = mean(mean_exploitation_rate, na.rm = TRUE),
se_exploitation_rate = sd(mean_exploitation_rate, na.rm = TRUE) / sqrt(n()),
.groups = 'drop') %>% as.data.frame()
# stats on the mean exploitation rate
title_lab_3 <- paste0("Mean Exploitation Rate (T0 = ", start_time, ")")
# p_val <- paste0("p = ", pvalue, "(lmer)")
p <- ggplot(plot_data, aes(x = food_source, y = mean_exploitation_rate, fill = food_source)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean_exploitation_rate - se_exploitation_rate,
ymax = mean_exploitation_rate + se_exploitation_rate),
width = 0.2) +
labs(x = "Food Source",
y = "Exploitation Rate (Mean Â± SE)",
title = title_lab_3) +
scale_fill_manual(values = c("virus" = "#FBB4AE", "control" = "#CCEBC5")) +
theme_bw() +
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# geom_segment(aes(x = 1.1, xend = 1.9 , y = 1.05 * max(mean_exploitation_rate, na.rm = TRUE),
#                  yend = 1.05 * max(mean_exploitation_rate, na.rm = TRUE)),
#              color = "black", size = 0.25)
# annotate("text", x = 1.5, y = 1.1 * max(plot_data$mean_exploitation_rate, na.rm = TRUE),
#          label = p_val, color = "black", size = 3)
print(p)
#NS
model <- lmer((cumulated_exploitation_time_differential) ~ first_source_fed_on*time + (1|colony_id)  , data=cumulative_explotation_over_time_differential )
print(Anova(model))
#DS
model <- lmer((delta_cumulated_exploitation_time) ~ first_source_fed_on*time + (1|colony_id) , data=data_delta)
print(Anova(model))
